declare -x SCRIPT=${0##*/}

# Process command line...
while [ $# -gt 0 ]; do
  case $1 in
    --help | -h) 
    printf "%s\n"             
    printf "%s\n" "This sets up autotools build environment"
	printf "%s\n" "based on OE staged data"
	printf "%s\n"
	printf "%s\n" "Usage: $SCRIPT [options]"
	printf "%s\n"
	printf "%s\n" "Available options:"
	printf "%s\t%s\n" "-p, --product" "Mandatory. Product ID, i.e. SR1106"
	printf "%s\t%s\n" "-m, --machine" "Mandatory. Machine ID, i.e dm814x-z3, dm365-htc ..."
	printf "%s\t%s\n" "-h, --help" "This help"
	printf "%s\n"
	printf "%s\n" "Example:"
	printf "%s\n"
	printf "%s\n" "$SCRIPT -p sr1106 -m dm814x-z3"
	printf "%s\n"
	
	exit 0
    ;;
    --product | -p)     shift; PRODUCT=$1; shift; ;;
    --machine | -m)     shift; MACHINE=$1; shift; ;;
    -*)                 printf "%s\n" "Switch not supported" >&2; exit -1 ;;
    *)                  shift; ;;  
esac
done

#Checking either we are dealing with development or release build
if [ -d $OEBASE/hanover-system-dev -a -d $OEBASE/hanover-apps-dev ] ; then
	DEV_FLAG=1;
elif [ ! -d "$OEBASE/hanover-system-dev" -a -d "$OEBASE/hanover-apps-dev" ]  ; then
	SANITY_CHECK_STATUS=0;
	printf "%s\n" 
	printf "%s\n" "Although hanover-system-dev is present,"
	printf "%s\n" "hanover-apps-dev is not found."
	printf "%s\n" "Run \"bb-get -d\" to get proper development build environment."
	printf "%s\n" 
elif [ ! -d "$OEBASE/hanover-apps-dev" -a -d "$OEBASE/hanover-system-dev" ]  ; then
	SANITY_CHECK_STATUS=0;
	printf "%s\n" 
	printf "%s\n" "Although hanover-system-dev is present," 
	printf "%s\n" "hanover-apps-dev is not found."
	printf "%s\n" "Run \"bb-get -d\" to get proper development build environment."
	printf "%s\n" 
elif [ ! -d $OEBASE/hanover-system-dev -a ! -d $OEBASE/hanover-apps-dev ] ; then 
	DEV_FLAG=0;
fi	



if [ ${DEV_FLAG} == 0 ] ; then 
	RELDIR="rel"
else
	RELDIR="dev"
fi

export MACHINE=$MACHINE
export PRODUCT=$PRODUCT


case $MACHINE in 

 dm365-htc)
    FEED_ARCH=armv5te
    ;;

 dm365-evm)
    FEED_ARCH=armv5te
    ;;

 dm814x-z3)
    FEED_ARCH=armv7a
    ;;

 dm814x-evm)
    FEED_ARCH=armv7a
    ;;

 dm814x-stib)
    FEED_ARCH=armv7a
    ;;

esac

    
export SDK_PATH="${OEBASE}/arago-tmp/${PRODUCT}/dev/sysroots/x86_64-linux/usr/${FEED_ARCH}"
export TOOLCHAIN_PATH="$SDK_PATH"
export TARGET_SYS=arm-arago-linux-gnueabi
export LD_LIBRARY_PATH=$SDK_PATH/$TARGET_SYS/lib:$SDK_PATH/$TARGET_SYS/usr/lib:$LD_LIBRARY_PATH
export PATH=$SDK_PATH/bin:$TOOLCHAIN_PATH/bin:$PATH
export CPATH=$SDK_PATH/$TARGET_SYS/usr/include:$CPATH
export CFLAGS=-I${OEBASE}/arago-tmp/${PRODUCT}/sysroots/${FEED_ARCH}-arago-linux-gnueabi/usr/include
export CPPFLAGS=-I${OEBASE}/arago-tmp/${PRODUCT}/sysroots/${FEED_ARCH}-arago-linux-gnueabi/usr/include
export LIBTOOL_SYSROOT_PATH=$SDK_PATH/$TARGET_SYS

