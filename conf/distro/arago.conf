# Set the collections
require conf/collections.inc
COLLECTIONS = "${OEBASE}/arago/ ${OEBASE}/arago-oe-dev/"

# Optionally add BOM, Custom and Test collections, if exist
COLLECTIONS =. "${@['', bb.data.getVar('OEBASE', d, 1)+'/arago-test/ '][os.path.exists(bb.data.getVar('OEBASE', d, 1)+'/arago-test/')]}"
COLLECTIONS =. "${@['', bb.data.getVar('OEBASE', d, 1)+'/arago-custom/ '][os.path.exists(bb.data.getVar('OEBASE', d, 1)+'/arago-custom/')]}"
COLLECTIONS =. "${@['', bb.data.getVar('OEBASE', d, 1)+'/arago-bom/ '][os.path.exists(bb.data.getVar('OEBASE', d, 1)+'/arago-bom/')]}"

# Use the BBMASK below to instruct BitBake to _NOT_ consider some .bb files
# This is a regular expression, so be sure to get your parenthesis balanced.
BBMASK = "(nonworking|obsolete)"

# Toolchain should be selected by setting TOOLCHAIN_BRAND in local.conf
# Set some sane defaults, in case someone forgets to set them in local.conf
TOOLCHAIN_BRAND ?= "csl"
TOOLCHAIN_TYPE ?= "external"

require conf/distro/include/toolchain-${TOOLCHAIN_TYPE}-${TOOLCHAIN_BRAND}.inc

# Enable capturing license files from sources (temporarily disabled)
# INHERIT += "distribute_license"

# Enable generation of source packages for SDKs
require conf/arago-source-ipk.conf

INHERIT += "amend"
FILESPATHBASE = "${@':'.join(sorted(list(set((bb.data.getVar('FILE_DIRNAME', d, 1).replace(bb.data.getVar('OEBASE', d, 1)+'/arago-oe-dev/', bb.data.getVar('OEBASE', d, 1)+'/arago/')+':'+bb.data.getVar('FILE_DIRNAME', d, 1)).split(':'))),None,None,True))}"

ANGSTROM_QT_VERSION = "4.6.3"
ARAGO_QT_PROVIDER = "qt4-embedded"

# Enable Qt+GLES for ARM v7a devices
ARAGO_QT_PROVIDER_armv7a = "qt4-embedded-gles"

require conf/distro/angstrom-2008.1.conf

# Put resulting images and packages in deploy directory outside of temp
# Doesn't work at the moment due to the way pstage works
#DEPLOY_DIR = "${OEBASE}/arago-deploy"

require conf/distro/include/arago-prefs.inc

include conf/arago-bom.conf

# Disable DropBear for now due to export restrictions
DISTRO_SSH_DAEMON ?= ""

# Don't install kernel image into the filesystem
RDEPENDS_kernel-base = ""

# Specify the feed configuration
ANGSTROM_FEED_CONFIGS = "arago-feed-configs"

# Feed configuration
ARAGO_URI = "http://feeds.arago-project.org"
ARAGO_FEED_BASEPATH = "feeds/live/${ANGSTROM_PKG_FORMAT}"
DISTRO_FEED_URI = "${ARAGO_URI}/${ARAGO_FEED_BASEPATH}"

# Enabling these 2 lines will cut the initial build time by utilizing
# pre-built native staging packages. Warning: this feature is not safe
# for multi-user environment, as it sets a global temp/work directory
# TMPDIR = "/tmp/arago"
# DEPLOY_DIR_PSTAGE = "${TMPDIR}/pstage"

# Set the distro name and version, since we now produce own SDK
DISTRO_NAME = "Arago"
DISTRO_VERSION = "2011.09"
BUILDNAME = "${DISTRO_NAME} ${DISTRO_VERSION}"
MAINTAINER = "Arago Developers <arago-devel@gforge.ti.com>"

TARGET_CC_ARCH_pn-cairo_armv5te = ""

# Set image and sdk names
SDK_DISTRO = "arago"
SDK_SUFFIX = "sdk"
SDK_NAME = "${SDK_DISTRO}-${DISTRO_VERSION}/${BASE_PACKAGE_ARCH}"
IMAGE_NAME = "${IMAGE_BASENAME}-${LIBC}-${ANGSTROM_PKG_FORMAT}-${DISTRO_VERSION}-${MACHINE}"
TOOLCHAIN_OUTPUTNAME := "${SDK_DISTRO}-${DISTRO_VERSION}-${FEED_ARCH}-${TARGET_OS}-${SDK_SUFFIX}"

require conf/distro/include/arago.inc

# Filter out angstrom blacklister from the inherit list
INHERIT := "${@filter_out('angstrom', bb.data.getVar('INHERIT', d, 1), d)}"
INHERIT += "angstrom-mirrors"

# Add own mirrors
INHERIT += "arago-mirrors"
CVS_TARBALL_STASH += "http://arago-project.org/files/sources/"

require conf/distro/include/toolchain-common-${TOOLCHAIN_TYPE}.inc

SDK_PATH := "${@["/${SDK_NAME}", bb.data.getVar('META_SDK_PATH', d, 1)][bool(bb.data.getVar('META_SDK_PATH', d, 1))]}"
