From 08824c950521a1dd842349f8076340f97223495e Mon Sep 17 00:00:00 2001
From: Prakash PM <prakash.pm@ti.com>
Date: Wed, 24 Nov 2010 11:59:15 +0530
Subject: [PATCH 1/7] DA850/OMAP-L138: Enable UART1 RTS/CTS line pinmuxing

This patch does the pinmuxing of UART1 RTS/CTS lines
on UART1 only if McASP is not selected.

Signed-off-by: Prakash PM <prakash.pm@ti.com>
---
 arch/arm/mach-davinci/Kconfig           |    8 ++++++++
 arch/arm/mach-davinci/board-da850-evm.c |   18 +++++++++++++++++-
 arch/arm/mach-davinci/da850.c           |    5 +++++
 3 files changed, 30 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-davinci/Kconfig b/arch/arm/mach-davinci/Kconfig
index c6d89c9..34d8167 100644
--- a/arch/arm/mach-davinci/Kconfig
+++ b/arch/arm/mach-davinci/Kconfig
@@ -58,6 +58,14 @@ config DA8XX_MAX_SPEED_456
 	bool "456 MHz"
 endchoice
 
+config DAVINCI_UART1_AFE
+	bool "Enable UART1 flow control"
+	depends on SERIAL_8250=y && ARCH_DAVINCI_DA850=y
+	help
+	  Say Y here if you want to enable flow control on UART1. This flag
+	  is necessary to detect pinmux clash between UART1 RTS/CTS lines with
+	  MCASP.
+
 config ARCH_DAVINCI_DA8XX
 	bool
 
diff --git a/arch/arm/mach-davinci/board-da850-evm.c b/arch/arm/mach-davinci/board-da850-evm.c
index 009e9b5..a2706de 100755
--- a/arch/arm/mach-davinci/board-da850-evm.c
+++ b/arch/arm/mach-davinci/board-da850-evm.c
@@ -923,6 +923,12 @@ static struct vpif_display_config da850_vpif_display_config = {
 #define HAS_VPIF_CAPTURE 0
 #endif
 
+#if defined(CONFIG_DAVINCI_UART1_AFE)
+#define HAS_UART1_AFE 1
+#else
+#define HAS_UART1_AFE 0
+#endif
+
 static da8xx_ocic_handler_t da850_evm_usb_ocic_handler;
 
 static int da850_evm_usb_set_power(unsigned port, int on)
@@ -1075,6 +1081,12 @@ static __init void da850_evm_init(void)
 		pr_warning("da830_evm_init: watchdog registration failed: %d\n",
 				ret);
 
+	/* Support for UART 1 */
+	ret = da8xx_pinmux_setup(da850_uart1_pins);
+	if (ret)
+		pr_warning("da850_evm_init: UART 1 mux setup failed:"
+						" %d\n", ret);
+
 	if (HAS_MMC) {
 		ret = davinci_cfg_reg(DA850_GPIO0_11);
 		if (ret)
@@ -1122,7 +1134,6 @@ static __init void da850_evm_init(void)
 	 * accessing them causes endless "too much work in irq53" messages
 	 * with arago fs
 	 */
-	__raw_writel(0, IO_ADDRESS(DA8XX_UART1_BASE) + 0x30);
 	__raw_writel(0, IO_ADDRESS(DA8XX_UART0_BASE) + 0x30);
 
 	if (HAS_MCBSP0) {
@@ -1160,6 +1171,11 @@ static __init void da850_evm_init(void)
 					"but they share pins.\n"
 					"\tDisable one of them.\n");
 
+		if (HAS_UART1_AFE)
+			pr_warning("WARNING: both McASP and UART1_AFE are "
+				"enabled, but they share pins.\n"
+					"\tDisable one of them.\n");
+
 		ret = da8xx_pinmux_setup(da850_mcasp_pins);
 		if (ret)
 			pr_warning("da850_evm_init: mcasp mux setup failed:"
diff --git a/arch/arm/mach-davinci/da850.c b/arch/arm/mach-davinci/da850.c
index 513ae85..ef9e09e 100755
--- a/arch/arm/mach-davinci/da850.c
+++ b/arch/arm/mach-davinci/da850.c
@@ -459,6 +459,8 @@ static const struct mux_config da850_pins[] = {
 	MUX_CFG(DA850, UART0_RXD,	3,	16,	15,	2,	false)
 	MUX_CFG(DA850, UART0_TXD,	3,	20,	15,	2,	false)
 	/* UART1 function */
+	MUX_CFG(DA850, NUART1_CTS,	0,	20,	15,	4,	false)
+	MUX_CFG(DA850, NUART1_RTS,	0,	16,	15,	4,	false)
 	MUX_CFG(DA850, UART1_RXD,	4,	24,	15,	2,	false)
 	MUX_CFG(DA850, UART1_TXD,	4,	28,	15,	2,	false)
 	/* UART2 function */
@@ -682,6 +684,9 @@ const short da850_uart0_pins[] __initdata = {
 
 const short da850_uart1_pins[] __initdata = {
 	DA850_UART1_RXD, DA850_UART1_TXD,
+#ifdef CONFIG_DAVINCI_UART1_AFE
+	DA850_NUART1_CTS, DA850_NUART1_RTS,
+#endif
 	-1
 };
 
-- 
1.7.3.2

