From 0d2eb557c40996762b026267d939e69349c4096c Mon Sep 17 00:00:00 2001
From: Rajashekhara, Sudhakar <sudhakar.raj@ti.com>
Date: Wed, 5 Jan 2011 22:52:05 +0530
Subject: [PATCH 7/7] da850/omap-l138: Configure GP0[11] only when UI card is detected

On Logic PD Rev.3 EVMs GP0[11] pin needs to be configured
for MMC and NOR to work. When GP0[11] is low, the SD0
interface will not work, but NOR flash will. When GP0[11]
is high, SD0 will work but NOR flash will not. By default
we are assuming that GP0[11] pin is driven high, when UI
card is not connected. Hence we are not configuring the
GP0[11] pin when MMC/SD is enabled and UI card is not
connected. Not configuring the GPIO pin will enable the
bluetooth to work on AM18x as it requires the GP0[11]
pin for UART flow control.

Signed-off-by: Rajashekhara, Sudhakar <sudhakar.raj@ti.com>
---
 arch/arm/mach-davinci/board-da850-evm.c |   38 ++++++++++++++++++++----------
 1 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/arch/arm/mach-davinci/board-da850-evm.c b/arch/arm/mach-davinci/board-da850-evm.c
index 5a6cffd..0e80934 100755
--- a/arch/arm/mach-davinci/board-da850-evm.c
+++ b/arch/arm/mach-davinci/board-da850-evm.c
@@ -307,6 +307,31 @@ static __init void da850_evm_setup_nor_nand(void)
 
 		platform_add_devices(da850_evm_devices,
 					ARRAY_SIZE(da850_evm_devices));
+	} else if (ui_card_detected && HAS_MMC) {
+		/*
+		 * On Logic PD Rev.3 EVMs GP0[11] pin needs to be configured
+		 * for MMC and NOR to work. When GP0[11] is low, the SD0
+		 * interface will not work, but NOR flash will. When GP0[11]
+		 * is high, SD0 will work but NOR flash will not. By default
+		 * we are assuming that GP0[11] pin is driven high, when UI
+		 * card is not connected. Hence we are not configuring the
+		 * GP0[11] pin when MMC/SD is enabled and UI card is not
+		 * connected. Not configuring the GPIO pin will enable the
+		 * bluetooth to work on AM18x as it requires the GP0[11]
+		 * pin for UART flow control.
+		 */
+		ret = davinci_cfg_reg(DA850_GPIO0_11);
+		if (ret)
+			pr_warning("da850_evm_init:GPIO(0,11) mux setup "
+					"failed\n");
+
+		ret = gpio_request(DA850_SD_ENABLE_PIN, "mmc_sd_en");
+		if (ret)
+			pr_warning("Cannot open GPIO %d\n",
+					DA850_SD_ENABLE_PIN);
+
+		/* Driver GP0[11] high for SD to work */
+		gpio_direction_output(DA850_SD_ENABLE_PIN, 1);
 	}
 }
 
@@ -1088,19 +1113,6 @@ static __init void da850_evm_init(void)
 						" %d\n", ret);
 
 	if (HAS_MMC) {
-		ret = davinci_cfg_reg(DA850_GPIO0_11);
-		if (ret)
-			pr_warning("da850_evm_init:GPIO(0,11) mux setup "
-					"failed\n");
-
-		ret = gpio_request(DA850_SD_ENABLE_PIN, "mmc_sd_en");
-		if (ret)
-			pr_warning("Cannot open GPIO %d\n",
-					DA850_SD_ENABLE_PIN);
-
-		/* Driver GP0[11] high for SD to work */
-		gpio_direction_output(DA850_SD_ENABLE_PIN, 1);
-
 		ret = da8xx_pinmux_setup(da850_mmcsd0_pins);
 		if (ret)
 			pr_warning("da850_evm_init: mmcsd0 mux setup failed:"
-- 
1.7.3.2

