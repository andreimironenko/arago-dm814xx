diff --git a/drivers/video/ti81xx/ti81xxfb/ti81xxfb_ioctl.c b/drivers/video/ti81xx/ti81xxfb/ti81xxfb_ioctl.c
old mode 100755
new mode 100644
index 98e1265..5155e2e
--- a/drivers/video/ti81xx/ti81xxfb/ti81xxfb_ioctl.c
+++ b/drivers/video/ti81xx/ti81xxfb/ti81xxfb_ioctl.c
@@ -150,6 +150,8 @@ static int ti81xxfb_setup_plane(struct fb_info *fbi,
 		if (0 == r)
 			gctrl->set_regparams(gctrl, &regp);
 	}
+	if (0 == r)
+		r = gctrl->apply_changes(gctrl);
 
 	if (0 == r)
 		r = gctrl->start(gctrl);
@@ -242,6 +244,9 @@ static int ti81xxfb_set_region_params(struct fb_info *fbi,
 	if (0 == r)
 		r = gctrl->set_regparams(gctrl, &regp);
 
+	if (0 == r)
+		r = gctrl->apply_changes(gctrl);
+
 	if (0 == r) {
 		fbi->var.xres = regp.regionwidth;
 		fbi->var.yres = regp.regionheight;
@@ -324,6 +329,8 @@ static int ti81xxfb_set_scparams(struct fb_info *fbi,
 	gscp.outheight = scp->outheight;
 	gscp.sccoeff = scp->coeff;
 	r = gctrl->set_scparams(gctrl, &gscp);
+	if (0 == r)
+		r = gctrl->apply_changes(gctrl);
 
 	ti81xxfb_unlock(tfbi);
 
@@ -478,6 +485,9 @@ static int ti81xxfb_set_sten(struct fb_info *fbi,
 
 	ti81xxfb_lock(tfbi);
 	r = gctrl->set_stenparams(gctrl, mlist->phy_addr, stparams->pitch);
+	if (0 == r)
+		r = gctrl->apply_changes(gctrl);
+
 	ti81xxfb_unlock(tfbi);
 	return r;
 
diff --git a/drivers/video/ti81xx/ti81xxfb/ti81xxfb_main.c b/drivers/video/ti81xx/ti81xxfb/ti81xxfb_main.c
old mode 100755
new mode 100644
index 44783d8..641bfc0
--- a/drivers/video/ti81xx/ti81xxfb/ti81xxfb_main.c
+++ b/drivers/video/ti81xx/ti81xxfb/ti81xxfb_main.c
@@ -577,17 +577,24 @@ static int ti81xxfb_apply_changes(struct fb_info *fbi, int init)
 
 		buf_addr = ti81xxfb_get_fb_paddr(tfbi) + offset;
 
-		regp.regionwidth = var->xres;
-		regp.regionheight = var->yres;
+		if ((regp.regionheight != var->yres) ||
+			(regp.regionwidth != var->xres)) {
+
+			regp.regionwidth = var->xres;
+			regp.regionheight = var->yres;
 #if 0
-		if (1 == init)
-			r = gctrl->check_params(gctrl, &regp, 0);
+			if (1 == init)
+				r = gctrl->check_params(gctrl, &regp, 0);
 #endif
-		r = gctrl->set_regparams(gctrl, &regp);
+			r = gctrl->set_regparams(gctrl, &regp);
+		}
 
 		if ((buf_addr != gctrl->buffer_addr) && (!r))
 			r = gctrl->set_buffer(tfbi->gctrl, buf_addr);
 
+		if (!r)
+			r = gctrl->apply_changes(gctrl);
+
 	}
 
 
diff --git a/drivers/video/ti81xx/vpss/grpx.c b/drivers/video/ti81xx/vpss/grpx.c
old mode 100755
new mode 100644
index 338de05..648875f
--- a/drivers/video/ti81xx/vpss/grpx.c
+++ b/drivers/video/ti81xx/vpss/grpx.c
@@ -121,7 +121,7 @@ static int vps_grpx_apply_changes(struct vps_grpx_ctrl *gctrl)
 	int r = 0;
 
 	VPSSDBG("(%d)- apply changes into FVID2_FRAME.\n", gctrl->grpx_num);
-
+	grpx_cs_lock(gctrl);
 	if (gstate->isstarted) {
 		if (gstate->scset) {
 			gctrl->grtlist->scparams =
@@ -165,7 +165,7 @@ static int vps_grpx_apply_changes(struct vps_grpx_ctrl *gctrl)
 	}
 
 
-
+	grpx_cs_free(gctrl);
 	return r;
 }
 
@@ -347,7 +347,7 @@ static int vps_grpx_set_format(struct vps_grpx_ctrl *gctrl,
 	grpx_cs_lock(gctrl);
 	if (gctrl->gstate.isstarted == false) {
 		gctrl->gstate.varset = true;
-		r = vps_grpx_apply_changes(gctrl);
+		r = gctrl->apply_changes(gctrl);
 	}
 
 	else {
@@ -487,11 +487,9 @@ static int vps_grpx_set_stenparams(struct vps_grpx_ctrl *gctrl,
 	else
 		gctrl->gstate.stenset = true;
 
-	r = vps_grpx_apply_changes(gctrl);
 	grpx_cs_free(gctrl);
-	if (!r)
-		VPSSDBG("(%d)-) set stenciling %#x\n",
-			gctrl->grpx_num, (u32)gctrl->gparams->stenptr);
+	VPSSDBG("(%d)-) set stenciling %#x\n",
+		gctrl->grpx_num, (u32)gctrl->gparams->stenptr);
 
 	return r;
 }
@@ -532,7 +530,6 @@ static int vps_grpx_set_scparams(struct vps_grpx_ctrl *gctrl,
 	}
 	gctrl->gstate.scset = true;
 
-	r = vps_grpx_apply_changes(gctrl);
 	grpx_cs_free(gctrl);
 	return r;
 }
@@ -589,7 +586,6 @@ static int vps_grpx_set_regparams(struct vps_grpx_ctrl *gctrl,
 
 	gctrl->gstate.regset = true;
 
-	r = vps_grpx_apply_changes(gctrl);
 	grpx_cs_free(gctrl);
 	return r;
 }
@@ -605,9 +601,8 @@ static int vps_grpx_set_clutptr(struct vps_grpx_ctrl  *gctrl, u32 pclut)
 	gctrl->grtlist->clutptr = (void *)pclut;
 
 	gctrl->gstate.clutSet = true;
-	r = vps_grpx_apply_changes(gctrl);
 	grpx_cs_free(gctrl);
-	return 0;
+	return r;
 }
 
 static void vps_grpx_add_ctrl(struct vps_grpx_ctrl *gctrl)
@@ -628,7 +623,6 @@ static int vps_grpx_set_buffer(struct vps_grpx_ctrl *gctrl,
 	gctrl->frames->addr[FVID2_RGB_ADDR_IDX]
 		[FVID2_RGB_ADDR_IDX] = (void *)buffer_addr;
 
-	r = vps_grpx_apply_changes(gctrl);
 	grpx_cs_free(gctrl);
 	return r;
 }
