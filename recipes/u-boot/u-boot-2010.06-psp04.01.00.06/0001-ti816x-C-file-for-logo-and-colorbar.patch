From 8735e3f1b0768cfe49ae83043d60b39fc910e6d8 Mon Sep 17 00:00:00 2001
From: Amarinder Bindra <a-bindra@ti.com>
Date: Mon, 16 Jan 2012 19:09:21 +0530
Subject: [PATCH 1/6] ti816x: C file for logo and colorbar


Signed-off-by: Amarinder Bindra <a-bindra@ti.com>
---
 common/cmd_logo.c | 4243 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 4243 insertions(+), 0 deletions(-)
 create mode 100644 common/cmd_logo.c

diff --git a/common/cmd_logo.c b/common/cmd_logo.c
new file mode 100644
index 0000000..a71fff7
--- /dev/null
+++ b/common/cmd_logo.c
@@ -0,0 +1,4243 @@
+#include <logo.h>
+
+uint16_t vpdma_firmware[] =
+{
+0x4b06,
+0x8040,
+0x6807,
+0x4907,
+0x4a06,
+0x5100,
+0x4402,
+0x081f,
+0x4a06,
+0x3100,
+0x4402,
+0x081e,
+0x4904,
+0x8041,
+0x4804,
+0x8040,
+0x8006,
+0x0c00,
+0xd001,
+0xc002,
+0x8116,
+0x0001,
+0x4400,
+0x081c,
+0x4401,
+0x081d,
+0x4906,
+0x096f,
+0x4806,
+0x0818,
+0x8501,
+0x4a06,
+0x0001,
+0x8121,
+0x9421,
+0x4400,
+0x081b,
+0x4400,
+0x0818,
+0x4806,
+0x0001,
+0x4400,
+0x081a,
+0x4806,
+0x1c00,
+0x4400,
+0x0819,
+0x4906,
+0x0000,
+0x4401,
+0x0825,
+0x4401,
+0x0824,
+0x4806,
+0x0818,
+0x4401,
+0x0821,
+0x4400,
+0x0820,
+0x4806,
+0x096f,
+0x8006,
+0x0001,
+0x4401,
+0x0823,
+0x4400,
+0x0822,
+0x4401,
+0x0826,
+0x4806,
+0x8000,
+0x4400,
+0x0827,
+0x4806,
+0x0034,
+0x4400,
+0x8042,
+0x4806,
+0x0000,
+0x4400,
+0x80f8,
+0x4806,
+0x0001,
+0x4400,
+0x80f9,
+0x4b06,
+0x0818,
+0x4b86,
+0x0820,
+0xbc07,
+0xb80f,
+0x0400,
+0x4806,
+0x0001,
+0x4400,
+0x80ff,
+0x4806,
+0xffff,
+0x4400,
+0x80f8,
+0x4806,
+0xffff,
+0x4400,
+0x80f9,
+0x4806,
+0x0000,
+0x4400,
+0x0858,
+0x4400,
+0x085d,
+0x4400,
+0x085e,
+0x4400,
+0x085f,
+0x4400,
+0x085c,
+0x4400,
+0x0957,
+0x4400,
+0x0959,
+0x4400,
+0x095a,
+0x4400,
+0x095b,
+0x4400,
+0x095c,
+0x4400,
+0x095d,
+0x4400,
+0x095e,
+0x4400,
+0x095f,
+0x4400,
+0x0960,
+0x4400,
+0x0966,
+0x4400,
+0x0965,
+0x4806,
+0x00d1,
+0x4400,
+0x80e1,
+0x4806,
+0x026a,
+0x4400,
+0x80e2,
+0x4806,
+0x05e7,
+0x4400,
+0x80e3,
+0x4806,
+0x01ad,
+0x4400,
+0x80fc,
+0x4400,
+0x80fe,
+0x0400,
+0x4806,
+0x0000,
+0x4400,
+0x0954,
+0x4400,
+0x0955,
+0x4400,
+0x0956,
+0x4804,
+0x80fe,
+0xaa06,
+0x0008,
+0x4906,
+0x0001,
+0x9401,
+0x4400,
+0x80ff,
+0x4b86,
+0x0959,
+0x83c4,
+0x80fe,
+0x480f,
+0xcc0e,
+0x4b06,
+0x8001,
+0x4806,
+0x0008,
+0xa804,
+0x80fe,
+0x8330,
+0x4807,
+0x8906,
+0x01f0,
+0x8516,
+0x01f0,
+0xc801,
+0x4581,
+0x4906,
+0x01ff,
+0x4401,
+0x80fd,
+0xb90f,
+0x4906,
+0x8042,
+0x8321,
+0x4a07,
+0x8626,
+0x007f,
+0xcccc,
+0x4804,
+0x80e0,
+0xe000,
+0x4806,
+0xffff,
+0x4400,
+0x80f8,
+0x4b06,
+0x0959,
+0x8334,
+0x80fe,
+0x4a06,
+0x0000,
+0x4502,
+0x4a04,
+0x80fe,
+0x4402,
+0x0861,
+0xa926,
+0x0005,
+0x4401,
+0x0868,
+0x4b06,
+0x0832,
+0x8313,
+0x4807,
+0x4400,
+0x0863,
+0xa926,
+0x0008,
+0x4401,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x6807,
+0x4400,
+0x0865,
+0x4807,
+0x4400,
+0x0866,
+0x8336,
+0x0003,
+0x4807,
+0x8006,
+0xfff9,
+0xcc03,
+0x4a06,
+0x05c5,
+0xe002,
+0x4806,
+0x0000,
+0x4400,
+0x0864,
+0x4b06,
+0x0830,
+0xa926,
+0x0005,
+0x8313,
+0x6807,
+0x4400,
+0x085d,
+0x4400,
+0x085c,
+0x4500,
+0x4b06,
+0x0833,
+0x8313,
+0x4807,
+0x4400,
+0x085f,
+0x4806,
+0x0151,
+0xe000,
+0x4804,
+0x0867,
+0x4b06,
+0x8043,
+0x8330,
+0x4907,
+0xcc32,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x011f,
+0x4500,
+0x4b86,
+0x8042,
+0x83c4,
+0x0867,
+0x480f,
+0x8336,
+0x0008,
+0x4500,
+0x4806,
+0x007f,
+0x4580,
+0x4b06,
+0x8001,
+0x8334,
+0x0867,
+0x4806,
+0xffff,
+0x4500,
+0x4804,
+0x0954,
+0xc812,
+0x4806,
+0x0180,
+0x4904,
+0x0955,
+0x8c01,
+0x4500,
+0x8c06,
+0x0080,
+0x4400,
+0x80fc,
+0x4b06,
+0x0834,
+0xaa26,
+0x0005,
+0x8332,
+0x4806,
+0x0000,
+0x4500,
+0x4806,
+0x0197,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x4500,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b06,
+0x8001,
+0xaa12,
+0x8323,
+0x4806,
+0x0101,
+0x4500,
+0x4b86,
+0x080f,
+0x4a0f,
+0xd80d,
+0x4806,
+0x0100,
+0x4500,
+0x4b86,
+0x0807,
+0x4a0f,
+0xd806,
+0x4806,
+0x01fa,
+0x4500,
+0x4400,
+0x80ff,
+0xc025,
+0x4804,
+0x80fe,
+0xa806,
+0x0005,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4a06,
+0x0000,
+0x4402,
+0x0891,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x8c06,
+0x8000,
+0x4500,
+0x4806,
+0x009a,
+0xe000,
+0x4906,
+0x5100,
+0x4806,
+0x0100,
+0x8c10,
+0x4400,
+0x081f,
+0x4a04,
+0x0866,
+0x4402,
+0x081d,
+0x4402,
+0x80d1,
+0x4904,
+0x0865,
+0x4401,
+0x081c,
+0x4401,
+0x80d0,
+0x4804,
+0x0863,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4907,
+0x8601,
+0xd803,
+0x4402,
+0x0862,
+0xc006,
+0x8016,
+0x0000,
+0x4a06,
+0x0000,
+0x4402,
+0x0862,
+0x8204,
+0x0864,
+0x4402,
+0x0864,
+0x4a04,
+0x0864,
+0xa806,
+0x0010,
+0x4400,
+0x081b,
+0x4400,
+0x0818,
+0x4400,
+0x80d2,
+0x4806,
+0x0001,
+0x4400,
+0x80d3,
+0x4a06,
+0x0000,
+0x4904,
+0x085c,
+0x4402,
+0x0825,
+0x4401,
+0x0824,
+0x4904,
+0x0891,
+0xc807,
+0x4906,
+0x0000,
+0x4401,
+0x0891,
+0x4904,
+0x085c,
+0xc005,
+0x4904,
+0x0892,
+0xcc02,
+0x4904,
+0x085d,
+0x4402,
+0x0821,
+0x4401,
+0x0820,
+0x4906,
+0x0000,
+0x4401,
+0x0892,
+0x4904,
+0x085f,
+0x4402,
+0x0823,
+0x4401,
+0x0822,
+0x4402,
+0x0826,
+0x4906,
+0x8000,
+0x4401,
+0x0827,
+0x4b86,
+0x0818,
+0xbe0f,
+0x4804,
+0x0862,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4500,
+0x4b86,
+0x0820,
+0x4804,
+0x80d4,
+0x4400,
+0x0865,
+0x4804,
+0x80d5,
+0x4400,
+0x0866,
+0xb80f,
+0x4806,
+0x0034,
+0x4b06,
+0x8042,
+0x4904,
+0x0867,
+0x8313,
+0x4500,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4906,
+0x0118,
+0x8d16,
+0x4000,
+0x4501,
+0x8336,
+0x0008,
+0x4500,
+0x8336,
+0x0008,
+0x4804,
+0x085d,
+0x4500,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4907,
+0x4804,
+0x80fe,
+0x4b06,
+0x0967,
+0x8303,
+0x8336,
+0x0018,
+0x4501,
+0x4904,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x4804,
+0x0865,
+0x6500,
+0x4804,
+0x0866,
+0x4500,
+0x4804,
+0x80fe,
+0xa806,
+0x0005,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x0197,
+0xe000,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x8c06,
+0xc000,
+0x4500,
+0x4806,
+0x009a,
+0xe000,
+0x4400,
+0x80ee,
+0xe400,
+0x4a04,
+0x80fe,
+0x4b06,
+0x8001,
+0xa926,
+0x0008,
+0x4401,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x6807,
+0x4400,
+0x0865,
+0x6807,
+0x4400,
+0x0866,
+0x6807,
+0x6807,
+0x4400,
+0x0862,
+0x4807,
+0x4400,
+0x0860,
+0x4402,
+0x0861,
+0xaa26,
+0x0005,
+0x4402,
+0x0868,
+0x4b06,
+0x0830,
+0x8323,
+0x6807,
+0x4400,
+0x085c,
+0x6807,
+0x4400,
+0x085d,
+0x6807,
+0x4400,
+0x085e,
+0x6807,
+0x4400,
+0x085f,
+0x4807,
+0x4400,
+0x0864,
+0x4400,
+0x0863,
+0x4804,
+0x0864,
+0xcc07,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4806,
+0x0118,
+0xe000,
+0x4b04,
+0x085d,
+0x4906,
+0xfff5,
+0x8336,
+0x0007,
+0x4807,
+0x9410,
+0x4906,
+0x000a,
+0x8410,
+0xc80c,
+0x4906,
+0x0001,
+0x8410,
+0xc80b,
+0x8410,
+0xc803,
+0x4806,
+0x02c4,
+0xe000,
+0x4806,
+0x047e,
+0xe000,
+0x4806,
+0x02dc,
+0xe000,
+0x4806,
+0x03bc,
+0xe000,
+0x8336,
+0x0008,
+0x4a04,
+0x085d,
+0x4502,
+0x8336,
+0x0008,
+0x4a04,
+0x0864,
+0x4502,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4806,
+0x01fb,
+0x4580,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x02dc,
+0x4500,
+0x4a04,
+0x0864,
+0xcc03,
+0x4806,
+0x0370,
+0xe000,
+0x4a04,
+0x0864,
+0x8026,
+0xffff,
+0xc873,
+0x4b04,
+0x085d,
+0x83b6,
+0x0006,
+0x480f,
+0x8806,
+0x4000,
+0x4400,
+0x088f,
+0x480f,
+0x8806,
+0x8000,
+0x4400,
+0x0954,
+0x83b6,
+0x0007,
+0x480f,
+0x8806,
+0x01ff,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xaa12,
+0x83a8,
+0x4580,
+0xab86,
+0x0008,
+0x83c6,
+0x0007,
+0x490f,
+0xd870,
+0x4a04,
+0x80fe,
+0x4b86,
+0x8001,
+0x4906,
+0x0008,
+0xaa12,
+0x83a8,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0xbc07,
+0x8336,
+0x0008,
+0x4806,
+0x0001,
+0x4a04,
+0x0956,
+0x9420,
+0x4a04,
+0x0955,
+0x8e02,
+0x4402,
+0x0955,
+0x4a04,
+0x085f,
+0x8523,
+0xd804,
+0x4b04,
+0x085c,
+0x4403,
+0x085d,
+0x8336,
+0xffff,
+0x4807,
+0x8336,
+0x0001,
+0x8806,
+0x0200,
+0xcc08,
+0x4904,
+0x088f,
+0xc805,
+0xb807,
+0x8916,
+0x0000,
+0x4401,
+0x088f,
+0xb807,
+0x8336,
+0x0008,
+0x4806,
+0x0001,
+0x4a04,
+0x0956,
+0x8126,
+0x0001,
+0x4401,
+0x0956,
+0x4904,
+0x0864,
+0x8116,
+0xfffe,
+0x4401,
+0x0864,
+0xc823,
+0x4a04,
+0x085f,
+0x8532,
+0xd805,
+0x4403,
+0x085d,
+0x4806,
+0x02a6,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085d,
+0x4904,
+0x085f,
+0x8006,
+0x0008,
+0x4400,
+0x0892,
+0x8410,
+0xd804,
+0x4806,
+0x0001,
+0x4400,
+0x0891,
+0x4804,
+0x085e,
+0x4906,
+0xffff,
+0x9410,
+0x4400,
+0x0863,
+0xc03e,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0xc035,
+0x83b6,
+0x0006,
+0x480f,
+0xd801,
+0xc010,
+0x4a04,
+0x80fe,
+0x4b86,
+0x8001,
+0x4906,
+0x0008,
+0xaa12,
+0x83a8,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0x8336,
+0x0010,
+0xc0b0,
+0x4804,
+0x0868,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x02dc,
+0x8c06,
+0x8000,
+0x4500,
+0xc00a,
+0x4806,
+0x0010,
+0x4400,
+0x088e,
+0x4806,
+0x0267,
+0xe000,
+0x4806,
+0x0118,
+0xe000,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x0864,
+0xcc03,
+0x4806,
+0x0440,
+0xe000,
+0x4b04,
+0x085d,
+0x83b6,
+0x0006,
+0x480f,
+0xc869,
+0x4a06,
+0x0000,
+0x4904,
+0x085c,
+0x4402,
+0x0825,
+0x4401,
+0x0824,
+0x4904,
+0x085d,
+0x4402,
+0x0821,
+0x4401,
+0x0820,
+0x4904,
+0x085f,
+0x4402,
+0x0823,
+0x4401,
+0x0822,
+0x4402,
+0x0826,
+0x4906,
+0x8000,
+0x4401,
+0x0827,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b06,
+0x8001,
+0xaa12,
+0x8323,
+0x4806,
+0x0101,
+0x4906,
+0x8000,
+0x4500,
+0x4b86,
+0x080f,
+0x4a0f,
+0xd859,
+0x4806,
+0x0100,
+0x4906,
+0x4000,
+0x4500,
+0x4b86,
+0x0807,
+0x4a0f,
+0xd850,
+0x4906,
+0x0101,
+0x4401,
+0x80fd,
+0x4400,
+0x80ff,
+0x4806,
+0x01fc,
+0x4500,
+0x4b04,
+0x085d,
+0xbc07,
+0x83b6,
+0x0006,
+0x680f,
+0x490f,
+0x8a16,
+0x01ff,
+0x8916,
+0x0400,
+0xc803,
+0x8006,
+0x0001,
+0xc002,
+0x4806,
+0x0001,
+0x4b86,
+0x8042,
+0x83c4,
+0x0867,
+0x4906,
+0x003e,
+0x8121,
+0x4581,
+0x4904,
+0x0864,
+0x8501,
+0x4401,
+0x0864,
+0xa806,
+0x0008,
+0x8230,
+0x4402,
+0x085d,
+0x4b06,
+0x0820,
+0x4b86,
+0x0808,
+0xb907,
+0x490f,
+0x490f,
+0x490f,
+0xc00a,
+0x4804,
+0x085d,
+0x8006,
+0x0008,
+0x4904,
+0x0864,
+0x8116,
+0xffff,
+0xc806,
+0xc034,
+0x4904,
+0x085f,
+0x8521,
+0xd826,
+0xc014,
+0x4401,
+0x0864,
+0x4904,
+0x085e,
+0x4a06,
+0xffff,
+0x9621,
+0x4402,
+0x0863,
+0x4806,
+0x0118,
+0xe000,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4806,
+0x80ff,
+0x4400,
+0x80f9,
+0x4804,
+0x0868,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x009a,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4a04,
+0x085e,
+0x4904,
+0x0864,
+0xc8d2,
+0xc0e5,
+0x4b06,
+0x0831,
+0x8334,
+0x0868,
+0x4500,
+0x4400,
+0x085d,
+0x8336,
+0x0003,
+0x4501,
+0x4401,
+0x0864,
+0x4806,
+0x02a6,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b04,
+0x085d,
+0x8336,
+0x0006,
+0x4807,
+0x8806,
+0x000f,
+0xc80b,
+0x4906,
+0x0001,
+0x8410,
+0xc81f,
+0x8410,
+0xc82b,
+0x8410,
+0xc839,
+0x8410,
+0xc83f,
+0xc079,
+0x8336,
+0x0001,
+0x4a04,
+0x80fe,
+0x4807,
+0x8806,
+0x01ff,
+0x4400,
+0x80fd,
+0x4b86,
+0x0893,
+0x83c6,
+0x0001,
+0x83c0,
+0x490f,
+0xb807,
+0x4b86,
+0x8042,
+0x4806,
+0x0008,
+0xaa02,
+0x83a8,
+0x4581,
+0xc06f,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x80f0,
+0x83a8,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x4580,
+0xc061,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8042,
+0xa912,
+0x83c1,
+0x8313,
+0x4807,
+0x8806,
+0x01ff,
+0x8226,
+0x0047,
+0x4582,
+0xc051,
+0x8336,
+0xfffa,
+0x4807,
+0x4400,
+0x80fb,
+0x4400,
+0x0957,
+0xc049,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xaa12,
+0x83a8,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x4580,
+0xab06,
+0x0008,
+0x8336,
+0x0007,
+0x4907,
+0x8916,
+0x8000,
+0xcc09,
+0x8336,
+0xfffc,
+0x4907,
+0x8a16,
+0x8000,
+0xc808,
+0x8a16,
+0x4000,
+0xcc05,
+0x4804,
+0x085d,
+0x4904,
+0x0864,
+0xc030,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0x4b04,
+0x085d,
+0x8336,
+0x0008,
+0xc074,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x8336,
+0xfff9,
+0x4400,
+0x80fd,
+0xb807,
+0x8336,
+0x0008,
+0xc067,
+0x8410,
+0xc8f1,
+0x8410,
+0xc818,
+0x8410,
+0xc822,
+0x8410,
+0xc83e,
+0x8410,
+0xc853,
+0x8410,
+0x4a06,
+0x05b7,
+0xe002,
+0x4804,
+0x085d,
+0x8006,
+0x0008,
+0x4904,
+0x0864,
+0x8116,
+0xffff,
+0x8604,
+0x085f,
+0xd863,
+0x4a06,
+0x05ac,
+0xe002,
+0x4906,
+0xfffc,
+0x8336,
+0x0001,
+0x6807,
+0x8806,
+0x01ff,
+0x4400,
+0x80ee,
+0x4806,
+0x0573,
+0xe000,
+0x4a06,
+0x0000,
+0x4402,
+0x0891,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8040,
+0xaa12,
+0x83a8,
+0x4806,
+0x0006,
+0x8703,
+0x6807,
+0x6580,
+0x6807,
+0x6580,
+0x83c6,
+0x0001,
+0x4807,
+0x4580,
+0x4a06,
+0x0000,
+0x4402,
+0x0864,
+0x4806,
+0x00dc,
+0xe000,
+0x6907,
+0x4907,
+0x4806,
+0x01ff,
+0x8910,
+0x4806,
+0x0000,
+0x4b86,
+0x087e,
+0x6580,
+0x6581,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x4b86,
+0x087e,
+0xbc0f,
+0x8336,
+0x0001,
+0xc00a,
+0x8336,
+0xfffe,
+0x4807,
+0x8806,
+0x01ff,
+0x4400,
+0x80fa,
+0x8336,
+0x0004,
+0xc000,
+0x4804,
+0x0864,
+0x8006,
+0xffff,
+0xc815,
+0x4400,
+0x0864,
+0x4904,
+0x085f,
+0x4403,
+0x085d,
+0x8431,
+0xd803,
+0x4806,
+0x02a6,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0xc0f8,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0xc01f,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4904,
+0x085f,
+0x4403,
+0x085d,
+0x8431,
+0xd803,
+0x4806,
+0x0118,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4806,
+0x0118,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4806,
+0x009a,
+0xe000,
+0x4b06,
+0x0831,
+0x8334,
+0x0868,
+0x4500,
+0x8336,
+0x0003,
+0x4501,
+0x4806,
+0x009a,
+0xe000,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4806,
+0x01fd,
+0x4580,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x0867,
+0x4b06,
+0x8040,
+0x8332,
+0x6807,
+0x4906,
+0xffff,
+0x9790,
+0x4a07,
+0x8a26,
+0x0001,
+0xc802,
+0x8fc6,
+0x8000,
+0x4a0f,
+0x8806,
+0x0001,
+0xc803,
+0x4906,
+0xfff8,
+0x9612,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4582,
+0x4a06,
+0x009a,
+0xe002,
+0x4806,
+0x009a,
+0xe000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x1c00,
+0x0001,
+0x0010,
+0x0002,
+0x0000,
+0x3100,
+0x5100,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x1000,
+0x1000,
+0x0040,
+0x11ff,
+0x0000,
+0x1200,
+0x1200,
+0x0040,
+0x13ff,
+0x0000,
+0x1400,
+0x1400,
+0x0040,
+0x15ff,
+0x0000,
+0x1600,
+0x1600,
+0x0040,
+0x17ff,
+0x0000,
+0x1800,
+0x1800,
+0x0040,
+0x19ff,
+0x0000,
+0x1a00,
+0x1a00,
+0x0040,
+0x1bff,
+0x0000,
+0x1c00,
+0x1c00,
+0x0040,
+0x1dff,
+0x0000,
+0x1e00,
+0x1e00,
+0x0040,
+0x1fff,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0400,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0d00,
+0x0001,
+0x0000,
+0x0002,
+0x0003,
+0x0004,
+0x0005,
+0x0006,
+0x0007,
+0x0008,
+0x0009,
+0x000a,
+0x000b,
+0x000c,
+0x000d,
+0x000e,
+0x000f,
+0x0010,
+0x0011,
+0x0014,
+0x0013,
+0x0015,
+0x0016,
+0x0017,
+0x0018,
+0x0019,
+0x001a,
+0x001b,
+0x001c,
+0x001d,
+0x001f,
+0x0020,
+0x0021,
+0x002a,
+0x002b,
+0x002c,
+0x002a,
+0x002b,
+0x002c,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x0024,
+0x0025,
+0x0022,
+0x0023,
+0x0024,
+0x0022,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x0028,
+0x0029,
+0x0026,
+0x0027,
+0x0028,
+0x0026,
+0x002d,
+0x0030,
+0x0031,
+0x002e,
+0x002f,
+0x0032,
+0x0033,
+0x0035,
+0x0012,
+0x001e,
+0x0037,
+0x0036,
+0x0039,
+0x0038,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x4b06,
+0x8040,
+0x6807,
+0x4907,
+0x4a06,
+0x5100,
+0x4402,
+0x081f,
+0x4a06,
+0x3100,
+0x4402,
+0x081e,
+0x4904,
+0x8041,
+0x4804,
+0x8040,
+0x8006,
+0x0c00,
+0xd001,
+0xc002,
+0x8116,
+0x0001,
+0x4400,
+0x081c,
+0x4401,
+0x081d,
+0x4906,
+0x096f,
+0x4806,
+0x0818,
+0x8501,
+0x4a06,
+0x0001,
+0x8121,
+0x9421,
+0x4400,
+0x081b,
+0x4400,
+0x0818,
+0x4806,
+0x0001,
+0x4400,
+0x081a,
+0x4806,
+0x1c00,
+0x4400,
+0x0819,
+0x4906,
+0x0000,
+0x4401,
+0x0825,
+0x4401,
+0x0824,
+0x4806,
+0x0818,
+0x4401,
+0x0821,
+0x4400,
+0x0820,
+0x4806,
+0x096f,
+0x8006,
+0x0001,
+0x4401,
+0x0823,
+0x4400,
+0x0822,
+0x4401,
+0x0826,
+0x4806,
+0x8000,
+0x4400,
+0x0827,
+0x4806,
+0x0034,
+0x4400,
+0x8042,
+0x4806,
+0x0000,
+0x4400,
+0x80f8,
+0x4806,
+0x0001,
+0x4400,
+0x80f9,
+0x4b06,
+0x0818,
+0x4b86,
+0x0820,
+0xbc07,
+0xb80f,
+0x0400,
+0x4806,
+0x0001,
+0x4400,
+0x80ff,
+0x4806,
+0xffff,
+0x4400,
+0x80f8,
+0x4806,
+0xffff,
+0x4400,
+0x80f9,
+0x4806,
+0x0000,
+0x4400,
+0x0858,
+0x4400,
+0x085d,
+0x4400,
+0x085e,
+0x4400,
+0x085f,
+0x4400,
+0x085c,
+0x4400,
+0x0957,
+0x4400,
+0x0959,
+0x4400,
+0x095a,
+0x4400,
+0x095b,
+0x4400,
+0x095c,
+0x4400,
+0x095d,
+0x4400,
+0x095e,
+0x4400,
+0x095f,
+0x4400,
+0x0960,
+0x4400,
+0x0966,
+0x4400,
+0x0965,
+0x4806,
+0x00d1,
+0x4400,
+0x80e1,
+0x4806,
+0x026a,
+0x4400,
+0x80e2,
+0x4806,
+0x05e7,
+0x4400,
+0x80e3,
+0x4806,
+0x01ad,
+0x4400,
+0x80fc,
+0x4400,
+0x80fe,
+0x0400,
+0x4806,
+0x0000,
+0x4400,
+0x0954,
+0x4400,
+0x0955,
+0x4400,
+0x0956,
+0x4804,
+0x80fe,
+0xaa06,
+0x0008,
+0x4906,
+0x0001,
+0x9401,
+0x4400,
+0x80ff,
+0x4b86,
+0x0959,
+0x83c4,
+0x80fe,
+0x480f,
+0xcc0e,
+0x4b06,
+0x8001,
+0x4806,
+0x0008,
+0xa804,
+0x80fe,
+0x8330,
+0x4807,
+0x8906,
+0x01f0,
+0x8516,
+0x01f0,
+0xc801,
+0x4581,
+0x4906,
+0x01ff,
+0x4401,
+0x80fd,
+0xb90f,
+0x4906,
+0x8042,
+0x8321,
+0x4a07,
+0x8626,
+0x007f,
+0xcccc,
+0x4804,
+0x80e0,
+0xe000,
+0x4806,
+0xffff,
+0x4400,
+0x80f8,
+0x4b06,
+0x0959,
+0x8334,
+0x80fe,
+0x4a06,
+0x0000,
+0x4502,
+0x4a04,
+0x80fe,
+0x4402,
+0x0861,
+0xa926,
+0x0005,
+0x4401,
+0x0868,
+0x4b06,
+0x0832,
+0x8313,
+0x4807,
+0x4400,
+0x0863,
+0xa926,
+0x0008,
+0x4401,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x6807,
+0x4400,
+0x0865,
+0x4807,
+0x4400,
+0x0866,
+0x8336,
+0x0003,
+0x4807,
+0x8006,
+0xfff9,
+0xcc03,
+0x4a06,
+0x05c5,
+0xe002,
+0x4806,
+0x0000,
+0x4400,
+0x0864,
+0x4b06,
+0x0830,
+0xa926,
+0x0005,
+0x8313,
+0x6807,
+0x4400,
+0x085d,
+0x4400,
+0x085c,
+0x4500,
+0x4b06,
+0x0833,
+0x8313,
+0x4807,
+0x4400,
+0x085f,
+0x4806,
+0x0151,
+0xe000,
+0x4804,
+0x0867,
+0x4b06,
+0x8043,
+0x8330,
+0x4907,
+0xcc32,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x011f,
+0x4500,
+0x4b86,
+0x8042,
+0x83c4,
+0x0867,
+0x480f,
+0x8336,
+0x0008,
+0x4500,
+0x4806,
+0x007f,
+0x4580,
+0x4b06,
+0x8001,
+0x8334,
+0x0867,
+0x4806,
+0xffff,
+0x4500,
+0x4804,
+0x0954,
+0xc812,
+0x4806,
+0x0180,
+0x4904,
+0x0955,
+0x8c01,
+0x4500,
+0x8c06,
+0x0080,
+0x4400,
+0x80fc,
+0x4b06,
+0x0834,
+0xaa26,
+0x0005,
+0x8332,
+0x4806,
+0x0000,
+0x4500,
+0x4806,
+0x0197,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x4500,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b06,
+0x8001,
+0xaa12,
+0x8323,
+0x4806,
+0x0101,
+0x4500,
+0x4b86,
+0x080f,
+0x4a0f,
+0xd80d,
+0x4806,
+0x0100,
+0x4500,
+0x4b86,
+0x0807,
+0x4a0f,
+0xd806,
+0x4806,
+0x01fa,
+0x4500,
+0x4400,
+0x80ff,
+0xc025,
+0x4804,
+0x80fe,
+0xa806,
+0x0005,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4a06,
+0x0000,
+0x4402,
+0x0891,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x8c06,
+0x8000,
+0x4500,
+0x4806,
+0x009a,
+0xe000,
+0x4906,
+0x5100,
+0x4806,
+0x0100,
+0x8c10,
+0x4400,
+0x081f,
+0x4a04,
+0x0866,
+0x4402,
+0x081d,
+0x4402,
+0x80d1,
+0x4904,
+0x0865,
+0x4401,
+0x081c,
+0x4401,
+0x80d0,
+0x4804,
+0x0863,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4907,
+0x8601,
+0xd803,
+0x4402,
+0x0862,
+0xc006,
+0x8016,
+0x0000,
+0x4a06,
+0x0000,
+0x4402,
+0x0862,
+0x8204,
+0x0864,
+0x4402,
+0x0864,
+0x4a04,
+0x0864,
+0xa806,
+0x0010,
+0x4400,
+0x081b,
+0x4400,
+0x0818,
+0x4400,
+0x80d2,
+0x4806,
+0x0001,
+0x4400,
+0x80d3,
+0x4a06,
+0x0000,
+0x4904,
+0x085c,
+0x4402,
+0x0825,
+0x4401,
+0x0824,
+0x4904,
+0x0891,
+0xc807,
+0x4906,
+0x0000,
+0x4401,
+0x0891,
+0x4904,
+0x085c,
+0xc005,
+0x4904,
+0x0892,
+0xcc02,
+0x4904,
+0x085d,
+0x4402,
+0x0821,
+0x4401,
+0x0820,
+0x4906,
+0x0000,
+0x4401,
+0x0892,
+0x4904,
+0x085f,
+0x4402,
+0x0823,
+0x4401,
+0x0822,
+0x4402,
+0x0826,
+0x4906,
+0x8000,
+0x4401,
+0x0827,
+0x4b86,
+0x0818,
+0xbe0f,
+0x4804,
+0x0862,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4500,
+0x4b86,
+0x0820,
+0x4804,
+0x80d4,
+0x4400,
+0x0865,
+0x4804,
+0x80d5,
+0x4400,
+0x0866,
+0xb80f,
+0x4806,
+0x0034,
+0x4b06,
+0x8042,
+0x4904,
+0x0867,
+0x8313,
+0x4500,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4906,
+0x0118,
+0x8d16,
+0x4000,
+0x4501,
+0x8336,
+0x0008,
+0x4500,
+0x8336,
+0x0008,
+0x4804,
+0x085d,
+0x4500,
+0x4b06,
+0x8043,
+0x8334,
+0x0867,
+0x4907,
+0x4804,
+0x80fe,
+0x4b06,
+0x0967,
+0x8303,
+0x8336,
+0x0018,
+0x4501,
+0x4904,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x4804,
+0x0865,
+0x6500,
+0x4804,
+0x0866,
+0x4500,
+0x4804,
+0x80fe,
+0xa806,
+0x0005,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x0197,
+0xe000,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x0118,
+0x8c06,
+0xc000,
+0x4500,
+0x4806,
+0x009a,
+0xe000,
+0x4400,
+0x80ee,
+0xe400,
+0x4a04,
+0x80fe,
+0x4b06,
+0x8001,
+0xa926,
+0x0008,
+0x4401,
+0x0867,
+0x4b06,
+0x8040,
+0x8313,
+0x6807,
+0x4400,
+0x0865,
+0x6807,
+0x4400,
+0x0866,
+0x6807,
+0x6807,
+0x4400,
+0x0862,
+0x4807,
+0x4400,
+0x0860,
+0x4402,
+0x0861,
+0xaa26,
+0x0005,
+0x4402,
+0x0868,
+0x4b06,
+0x0830,
+0x8323,
+0x6807,
+0x4400,
+0x085c,
+0x6807,
+0x4400,
+0x085d,
+0x6807,
+0x4400,
+0x085e,
+0x6807,
+0x4400,
+0x085f,
+0x4807,
+0x4400,
+0x0864,
+0x4400,
+0x0863,
+0x4804,
+0x0864,
+0xcc07,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4806,
+0x0118,
+0xe000,
+0x4b04,
+0x085d,
+0x4906,
+0xfff5,
+0x8336,
+0x0007,
+0x4807,
+0x9410,
+0x4906,
+0x000a,
+0x8410,
+0xc80c,
+0x4906,
+0x0001,
+0x8410,
+0xc80b,
+0x8410,
+0xc803,
+0x4806,
+0x02c4,
+0xe000,
+0x4806,
+0x047e,
+0xe000,
+0x4806,
+0x02dc,
+0xe000,
+0x4806,
+0x03bc,
+0xe000,
+0x8336,
+0x0008,
+0x4a04,
+0x085d,
+0x4502,
+0x8336,
+0x0008,
+0x4a04,
+0x0864,
+0x4502,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4806,
+0x01fb,
+0x4580,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x02dc,
+0x4500,
+0x4a04,
+0x0864,
+0xcc03,
+0x4806,
+0x0370,
+0xe000,
+0x4a04,
+0x0864,
+0x8026,
+0xffff,
+0xc873,
+0x4b04,
+0x085d,
+0x83b6,
+0x0006,
+0x480f,
+0x8806,
+0x4000,
+0x4400,
+0x088f,
+0x480f,
+0x8806,
+0x8000,
+0x4400,
+0x0954,
+0x83b6,
+0x0007,
+0x480f,
+0x8806,
+0x01ff,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xaa12,
+0x83a8,
+0x4580,
+0xab86,
+0x0008,
+0x83c6,
+0x0007,
+0x490f,
+0xd870,
+0x4a04,
+0x80fe,
+0x4b86,
+0x8001,
+0x4906,
+0x0008,
+0xaa12,
+0x83a8,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0xbc07,
+0x8336,
+0x0008,
+0x4806,
+0x0001,
+0x4a04,
+0x0956,
+0x9420,
+0x4a04,
+0x0955,
+0x8e02,
+0x4402,
+0x0955,
+0x4a04,
+0x085f,
+0x8523,
+0xd804,
+0x4b04,
+0x085c,
+0x4403,
+0x085d,
+0x8336,
+0xffff,
+0x4807,
+0x8336,
+0x0001,
+0x8806,
+0x0200,
+0xcc08,
+0x4904,
+0x088f,
+0xc805,
+0xb807,
+0x8916,
+0x0000,
+0x4401,
+0x088f,
+0xb807,
+0x8336,
+0x0008,
+0x4806,
+0x0001,
+0x4a04,
+0x0956,
+0x8126,
+0x0001,
+0x4401,
+0x0956,
+0x4904,
+0x0864,
+0x8116,
+0xfffe,
+0x4401,
+0x0864,
+0xc823,
+0x4a04,
+0x085f,
+0x8532,
+0xd805,
+0x4403,
+0x085d,
+0x4806,
+0x02a6,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085d,
+0x4904,
+0x085f,
+0x8006,
+0x0008,
+0x4400,
+0x0892,
+0x8410,
+0xd804,
+0x4806,
+0x0001,
+0x4400,
+0x0891,
+0x4804,
+0x085e,
+0x4906,
+0xffff,
+0x9410,
+0x4400,
+0x0863,
+0xc03e,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0xc035,
+0x83b6,
+0x0006,
+0x480f,
+0xd801,
+0xc010,
+0x4a04,
+0x80fe,
+0x4b86,
+0x8001,
+0x4906,
+0x0008,
+0xaa12,
+0x83a8,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0x8336,
+0x0010,
+0xc0b0,
+0x4804,
+0x0868,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4a04,
+0x80fe,
+0x4b06,
+0x0967,
+0x8323,
+0x4806,
+0x02dc,
+0x8c06,
+0x8000,
+0x4500,
+0xc00a,
+0x4806,
+0x0010,
+0x4400,
+0x088e,
+0x4806,
+0x0267,
+0xe000,
+0x4806,
+0x0118,
+0xe000,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x0864,
+0xcc03,
+0x4806,
+0x0440,
+0xe000,
+0x4b04,
+0x085d,
+0x83b6,
+0x0006,
+0x480f,
+0xc869,
+0x4a06,
+0x0000,
+0x4904,
+0x085c,
+0x4402,
+0x0825,
+0x4401,
+0x0824,
+0x4904,
+0x085d,
+0x4402,
+0x0821,
+0x4401,
+0x0820,
+0x4904,
+0x085f,
+0x4402,
+0x0823,
+0x4401,
+0x0822,
+0x4402,
+0x0826,
+0x4906,
+0x8000,
+0x4401,
+0x0827,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b06,
+0x8001,
+0xaa12,
+0x8323,
+0x4806,
+0x0101,
+0x4906,
+0x8000,
+0x4500,
+0x4b86,
+0x080f,
+0x4a0f,
+0xd859,
+0x4806,
+0x0100,
+0x4906,
+0x4000,
+0x4500,
+0x4b86,
+0x0807,
+0x4a0f,
+0xd850,
+0x4906,
+0x0101,
+0x4401,
+0x80fd,
+0x4400,
+0x80ff,
+0x4806,
+0x01fc,
+0x4500,
+0x4b04,
+0x085d,
+0xbc07,
+0x83b6,
+0x0006,
+0x680f,
+0x490f,
+0x8a16,
+0x01ff,
+0x8916,
+0x0400,
+0xc803,
+0x8006,
+0x0001,
+0xc002,
+0x4806,
+0x0001,
+0x4b86,
+0x8042,
+0x83c4,
+0x0867,
+0x4906,
+0x003e,
+0x8121,
+0x4581,
+0x4904,
+0x0864,
+0x8501,
+0x4401,
+0x0864,
+0xa806,
+0x0008,
+0x8230,
+0x4402,
+0x085d,
+0x4b06,
+0x0820,
+0x4b86,
+0x0808,
+0xb907,
+0x490f,
+0x490f,
+0x490f,
+0xc00a,
+0x4804,
+0x085d,
+0x8006,
+0x0008,
+0x4904,
+0x0864,
+0x8116,
+0xffff,
+0xc806,
+0xc034,
+0x4904,
+0x085f,
+0x8521,
+0xd826,
+0xc014,
+0x4401,
+0x0864,
+0x4904,
+0x085e,
+0x4a06,
+0xffff,
+0x9621,
+0x4402,
+0x0863,
+0x4806,
+0x0118,
+0xe000,
+0x4806,
+0x8000,
+0x4400,
+0x80fa,
+0x4806,
+0x80ff,
+0x4400,
+0x80f9,
+0x4804,
+0x0868,
+0x4b06,
+0x0834,
+0x8303,
+0x4904,
+0x0864,
+0x4501,
+0x4b06,
+0x0831,
+0x8303,
+0x4904,
+0x085d,
+0x4501,
+0x4806,
+0x009a,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4a04,
+0x085e,
+0x4904,
+0x0864,
+0xc8d2,
+0xc0e5,
+0x4b06,
+0x0831,
+0x8334,
+0x0868,
+0x4500,
+0x4400,
+0x085d,
+0x8336,
+0x0003,
+0x4501,
+0x4401,
+0x0864,
+0x4806,
+0x02a6,
+0xe000,
+0x4a04,
+0x80fe,
+0x4b04,
+0x085d,
+0x8336,
+0x0006,
+0x4807,
+0x8806,
+0x000f,
+0xc80b,
+0x4906,
+0x0001,
+0x8410,
+0xc81f,
+0x8410,
+0xc82b,
+0x8410,
+0xc839,
+0x8410,
+0xc83f,
+0xc079,
+0x8336,
+0x0001,
+0x4a04,
+0x80fe,
+0x4807,
+0x8806,
+0x01ff,
+0x4400,
+0x80fd,
+0x4b86,
+0x0893,
+0x83c6,
+0x0001,
+0x83c0,
+0x490f,
+0xb807,
+0x4b86,
+0x8042,
+0x4806,
+0x0008,
+0xaa02,
+0x83a8,
+0x4581,
+0xc06f,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x80f0,
+0x83a8,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x4580,
+0xc061,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8042,
+0xa912,
+0x83c1,
+0x8313,
+0x4807,
+0x8806,
+0x01ff,
+0x8226,
+0x0047,
+0x4582,
+0xc051,
+0x8336,
+0xfffa,
+0x4807,
+0x4400,
+0x80fb,
+0x4400,
+0x0957,
+0xc049,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xaa12,
+0x83a8,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x4580,
+0xab06,
+0x0008,
+0x8336,
+0x0007,
+0x4907,
+0x8916,
+0x8000,
+0xcc09,
+0x8336,
+0xfffc,
+0x4907,
+0x8a16,
+0x8000,
+0xc808,
+0x8a16,
+0x4000,
+0xcc05,
+0x4804,
+0x085d,
+0x4904,
+0x0864,
+0xc030,
+0x4806,
+0x01fe,
+0x4580,
+0x4400,
+0x80ff,
+0x4b04,
+0x085d,
+0x8336,
+0x0008,
+0xc074,
+0x8336,
+0x0001,
+0x4807,
+0x8806,
+0x01ff,
+0x8336,
+0xfff9,
+0x4400,
+0x80fd,
+0xb807,
+0x8336,
+0x0008,
+0xc067,
+0x8410,
+0xc8f1,
+0x8410,
+0xc818,
+0x8410,
+0xc822,
+0x8410,
+0xc83e,
+0x8410,
+0xc853,
+0x8410,
+0x4a06,
+0x05b7,
+0xe002,
+0x4804,
+0x085d,
+0x8006,
+0x0008,
+0x4904,
+0x0864,
+0x8116,
+0xffff,
+0x8604,
+0x085f,
+0xd863,
+0x4a06,
+0x05ac,
+0xe002,
+0x4906,
+0xfffc,
+0x8336,
+0x0001,
+0x6807,
+0x8806,
+0x01ff,
+0x4400,
+0x80ee,
+0x4806,
+0x0573,
+0xe000,
+0x4a06,
+0x0000,
+0x4402,
+0x0891,
+0x4a04,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8040,
+0xaa12,
+0x83a8,
+0x4806,
+0x0006,
+0x8703,
+0x6807,
+0x6580,
+0x6807,
+0x6580,
+0x83c6,
+0x0001,
+0x4807,
+0x4580,
+0x4a06,
+0x0000,
+0x4402,
+0x0864,
+0x4806,
+0x00dc,
+0xe000,
+0x6907,
+0x4907,
+0x4806,
+0x01ff,
+0x8910,
+0x4806,
+0x0000,
+0x4b86,
+0x087e,
+0x6580,
+0x6581,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x6580,
+0x4b86,
+0x087e,
+0xbc0f,
+0x8336,
+0x0001,
+0xc00a,
+0x8336,
+0xfffe,
+0x4807,
+0x8806,
+0x01ff,
+0x4400,
+0x80fa,
+0x8336,
+0x0004,
+0xc000,
+0x4804,
+0x0864,
+0x8006,
+0xffff,
+0xc815,
+0x4400,
+0x0864,
+0x4904,
+0x085f,
+0x4403,
+0x085d,
+0x8431,
+0xd803,
+0x4806,
+0x02a6,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0xc0f8,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0xc01f,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4904,
+0x085f,
+0x4403,
+0x085d,
+0x8431,
+0xd803,
+0x4806,
+0x0118,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4806,
+0x0118,
+0xe000,
+0x4804,
+0x085c,
+0x4400,
+0x085d,
+0x4804,
+0x085e,
+0x4400,
+0x0863,
+0x4806,
+0x009a,
+0xe000,
+0x4b06,
+0x0831,
+0x8334,
+0x0868,
+0x4500,
+0x8336,
+0x0003,
+0x4501,
+0x4806,
+0x009a,
+0xe000,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4806,
+0x01fd,
+0x4580,
+0x4806,
+0x009a,
+0xe000,
+0x4a04,
+0x0867,
+0x4b06,
+0x8040,
+0x8332,
+0x6807,
+0x4906,
+0xffff,
+0x9790,
+0x4a07,
+0x8a26,
+0x0001,
+0xc802,
+0x8fc6,
+0x8000,
+0x4a0f,
+0x8806,
+0x0001,
+0xc803,
+0x4906,
+0xfff8,
+0x9612,
+0x4804,
+0x80fe,
+0x4906,
+0x0008,
+0x4b86,
+0x8001,
+0xa810,
+0x8388,
+0x4582,
+0x4a06,
+0x009a,
+0xe002,
+0x4806,
+0x009a,
+0xe000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x1c00,
+0x0001,
+0x0010,
+0x0002,
+0x0000,
+0x3100,
+0x5100,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x1000,
+0x1000,
+0x0040,
+0x11ff,
+0x0000,
+0x1200,
+0x1200,
+0x0040,
+0x13ff,
+0x0000,
+0x1400,
+0x1400,
+0x0040,
+0x15ff,
+0x0000,
+0x1600,
+0x1600,
+0x0040,
+0x17ff,
+0x0000,
+0x1800,
+0x1800,
+0x0040,
+0x19ff,
+0x0000,
+0x1a00,
+0x1a00,
+0x0040,
+0x1bff,
+0x0000,
+0x1c00,
+0x1c00,
+0x0040,
+0x1dff,
+0x0000,
+0x1e00,
+0x1e00,
+0x0040,
+0x1fff,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0400,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0d00,
+0x0001,
+0x0000,
+0x0002,
+0x0003,
+0x0004,
+0x0005,
+0x0006,
+0x0007,
+0x0008,
+0x0009,
+0x000a,
+0x000b,
+0x000c,
+0x000d,
+0x000e,
+0x000f,
+0x0010,
+0x0011,
+0x0014,
+0x0013,
+0x0015,
+0x0016,
+0x0017,
+0x0018,
+0x0019,
+0x001a,
+0x001b,
+0x001c,
+0x001d,
+0x001f,
+0x0020,
+0x0021,
+0x002a,
+0x002b,
+0x002c,
+0x002a,
+0x002b,
+0x002c,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0022,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x0023,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003a,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x003b,
+0x0024,
+0x0025,
+0x0022,
+0x0023,
+0x0024,
+0x0022,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0026,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x0027,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003c,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x003d,
+0x0028,
+0x0029,
+0x0026,
+0x0027,
+0x0028,
+0x0026,
+0x002d,
+0x0030,
+0x0031,
+0x002e,
+0x002f,
+0x0032,
+0x0033,
+0x0035,
+0x0012,
+0x001e,
+0x0037,
+0x0036,
+0x0039,
+0x0038,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+0x0000,
+};
+
+uint32_t vpdma_firmware_size = sizeof(vpdma_firmware);
+
+int read_bmp_image(uint32_t bmp_source, uint32_t bmp_dest)
+{
+	uint32_t bmp_size = 0;
+	int cut_width = 0;	 
+	int bmp_width = 0;
+	int bmp_height = 0;
+	int bmp_stride = 0;
+	int bmp_data_offset = 0;
+	int bmp_pixel_bits = 0;
+	int pad	= 0;
+	int image_type = 0;
+	uint32_t image_start_addr;
+	int row_no;
+	int row_dest;
+	int rows_cropped;
+
+	if(bmp_read16(bmp_source) == BMP_SIGNATURE)
+	{
+		/*read size of bmp file*/
+		bmp_size = (bmp_read64(bmp_source) >> 16) & 0xFFFFFFFF;
+#ifdef DEBUG_BMP
+		printf("\nfile size = %x",bmp_size);
+#endif
+		/*read data starting offset*/
+		bmp_data_offset = bmp_read16(bmp_source + BMP_DATA_OFFSET);
+#ifdef DEBUG_BMP
+		printf("\ndata offset = %x", bmp_data_offset);
+#endif
+
+		/*read bmp width*/
+		bmp_width  = bmp_read16(bmp_source + BMP_WIDTH_OFFSET);
+#ifdef DEBUG_BMP
+		printf("\ndword width  = %d", bmp_width);
+#endif
+		bmp_stride =  bmp_width * 3;
+
+		/*read bmp height*/
+		bmp_height = bmp_read16(bmp_source + BMP_HEIGHT_OFFSET );
+		if (bmp_height < 0)
+		{
+			image_type = BMP_IMAGE_TOPDOWN;
+			bmp_height *= -1;
+		}
+		else
+		{
+			image_type = BMP_IMAGE_BOTTOMUP;
+			bmp_height *= 1;
+		}
+
+#ifdef DEBUG_BMP
+		printf("\ndword height = %d", bmp_height);
+#endif
+		bmp_pixel_bits = bmp_read16(bmp_source + BMP_BITS_PER_PIXEL_OFFSET);
+
+		/* check whether the number of bits used for pixel is 24 or not */
+		if (bmp_pixel_bits != 24)
+		{
+			printf("\nERROR: Not able to read image, use 24-bit BMP Image");
+			return -1;
+		}
+		pad = (bmp_size - (bmp_stride * bmp_height) - 54);
+		pad /= bmp_height;
+
+		/*
+		   set background color
+		 */	
+		memset((void *)(bmp_dest),LOGO_BGCOLOR, FRAME_SIZE);
+		if(bmp_width > WIDTH)
+		{
+			cut_width = bmp_width - WIDTH;
+			bmp_width = WIDTH;
+			bmp_stride = WIDTH * 3;
+		}
+		if(bmp_height > HEIGHT)
+		{    
+			row_no = bmp_height - 1;     
+			rows_cropped = bmp_height - HEIGHT;
+			bmp_height = HEIGHT;
+		}    
+		else 
+		{    
+			row_no  = bmp_height - 1; 
+			rows_cropped = 0; 
+		}
+
+		/*image start offset*/
+		image_start_addr = bmp_dest+ (STRIDE * ((HEIGHT - bmp_height) >> 1 )) + ((STRIDE - (bmp_stride)) >> 1);
+
+		/* aligning the address with 24 bit sets */
+		if ((image_start_addr - bmp_dest) % 3 == 1)
+		{
+			image_start_addr += 2;
+		}
+		else if ((image_start_addr - bmp_dest) % 3 == 2)
+		{
+			image_start_addr += 1;
+		}
+		
+		/*copy image data row by row to destination offset*/
+		if (image_type == BMP_IMAGE_BOTTOMUP)
+		{
+			for(row_no = (bmp_height-1), row_dest = 0; row_no >= 0; row_no--, row_dest++)
+			{
+				memcpy((uint32_t*) (image_start_addr + (row_dest * (STRIDE))),
+				(uint32_t*) ((bmp_source + bmp_data_offset) + (row_no * (bmp_stride + (cut_width * 3)+pad))),
+					(bmp_stride));
+			}
+		}
+		else
+		{
+			for(row_no = 0, row_dest = 0; row_no <= (bmp_height-1); row_no++, row_dest++)
+			{
+				memcpy((uint32_t*) (image_start_addr + (row_dest * (STRIDE))),
+				(uint32_t*) ((bmp_source + bmp_data_offset) + (row_no * (bmp_stride + (cut_width * 3)+pad))),
+					(bmp_stride));
+			}
+		}	
+		return 0;
+	}
+
+	return -1;
+}
+
+/**
+ * Load firmware for VPDMA.
+ */
+int vpdma_load_firmware(uint32_t* desc_buffer)
+{
+	uint32_t* firmware;
+	uint32_t status;
+	int repeat;
+	int result = 0;
+	int ok;
+
+	/* allocate physical contiguous memory for firmware buffer */
+	firmware = (uint32_t*)desc_buffer;
+	if (!firmware)
+	{
+#ifdef DEBUG_VPSS
+		printf("unable to allocate memory for VPDMA firmware\n");
+#endif
+		return -1;
+	}
+	/* copy firmware to buffer */
+	memcpy(firmware, vpdma_firmware, vpdma_firmware_size);
+	/* Reset VPDMA module */
+	vps_reset_module(VPS_MODULE_VPDMA, 1);
+	udelay(10);
+	vps_reset_module(VPS_MODULE_VPDMA, 0);
+
+	/* load firmware */
+	vpdma_write32(VPDMA_LIST_ADDR, (uint32_t)firmware);
+
+	/* wait till firmware is loaded */
+        for (ok = 0, repeat = 0; repeat < 100 && !ok; repeat++)
+	{
+		status = vpdma_read32(VPDMA_LIST_ATTR);
+		if ((status & 0x80000) == 0x80000)
+		{
+			ok = 1;
+		}
+		else
+		{
+			udelay(10);
+		}
+	}
+
+        if (!ok)
+    	{
+#ifdef DEBUG_VPSS
+    		printf("failed to load VPDMA firmware\n");
+#endif
+    		result = -1;
+    	}
+ 
+	return result;
+}
+
+void vps_reset_module(vps_module_t module, int assert_reset)
+{
+	uint32_t val = vps_read32(VPS_CLKC_RESET);
+
+	if (assert_reset)
+		val |= (1<<module);
+	else
+		val &= ~(1<<module);
+
+	vps_write32(VPS_CLKC_RESET, val);
+}
+
+uint32_t dispmgr_create_grpx_conf_descriptor(int grpx_unit, uint32_t* desc_buffer, 
+uint32_t* payload_buffer, uint32_t xres, uint32_t yres)
+{
+	uint32_t size = 0;
+	uint32_t* desc;
+	uint32_t* payload;
+
+	/* set up frame configuration descriptor */
+	desc = desc_buffer;
+	desc[0] = 0x1;   /* frame configuration address */
+	desc[1] = 16;    /* data length */
+	desc[2] = (uint32_t)payload_buffer;  /* payload location */
+	desc[3] = 0
+		| (0xB<<27)     /* packet type */
+		| (0<<26)       /* indirect command */
+		| (1<<24)       /* block type */
+		| ((grpx_unit + 1)<<16)  /* destination GRPX0..GRPX2 */
+		| (1<<0)        /* payload size in 128 bit units */
+		;
+	size += 16;
+	payload = payload_buffer;
+	payload[0] = 0;      /* reserved */
+	payload[1] = 0
+		| (xres<<16)  /* frame width */
+		| (yres<<0)   /* frame height */
+			;
+	payload[2] = 0;      /* reserved */
+	payload[3] = 0
+		| (0<<30)    /* progressive format */
+		| (1<<31)    /* yes soft reset of GRPX unit */
+		;
+
+	return size;
+}
+
+uint32_t dispmgr_setup_layers(uint32_t* desc_buffer, int stride,int width, int 
+height, uint32_t paddr)
+{
+	uint32_t size = 0;
+	uint32_t* desc;
+	int chan;
+	int x = 0;
+	int y = 0;
+
+	uint32_t layer_ctrl;
+	desc = desc_buffer ;
+	layer_ctrl = 0x0000E400;
+
+	/*
+	 * set up data descriptors for GRPX units
+	 */
+	/* add src_viewport origin to surface start address */
+			
+#ifdef CONFIG_GRPX0
+	layer_ctrl |= 1<<(2);  /* enable GRPXx layer */
+#elif defined CONFIG_GRPX1
+	layer_ctrl |= 1<<(1);  /* enable GRPXx layer */
+#else
+	layer_ctrl |= 1<<(0);  /* enable GRPXx layer */
+#endif
+
+#ifdef CONFIG_GRPX0
+	chan = GRPX0_CHANNEL_NUMBER;
+#elif defined CONFIG_GRPX1
+	chan = GRPX1_CHANNEL_NUMBER;
+#else
+	chan = GRPX2_CHANNEL_NUMBER;
+#endif
+
+	/* set up data transfer descriptor */
+	desc[0] = 0
+		| (DATA_TYPE<<26)    // RGB-888
+		| (0<<25)            // no notification
+		| (0<<24)            // field number
+		| (0<<23)            // 2-dimensional data
+		| (0<<20)            // +1 line skip (even)
+		| (0<<16)            // +1 line skip (odd)
+		| (stride)           // line stride
+		;
+	desc[1] = 0
+		| (width<<16)        // line length in pixels
+		| (height)           // number of rows
+		;
+	desc[2] = paddr;
+	desc[3] = 0
+    		| (0xA<<27)    // packet type
+		| (0<<26)      // 1D mode
+		| (0<<25)      // inbound direction
+		| (chan<<16)   // channel
+		| (0<<9)       // priority
+		| (chan<<0)    // next channel
+		;
+	desc[4] = 0
+		| (width<<16)  // region width
+		| (height)     // region height
+		;
+	desc[5] = 0
+		| (x<<16)      // horizontal start
+		| (y<<0)       // vertical start
+		;
+	desc[6] = 0
+		| (1<<7)       // first region
+		| (1<<8)       // last region
+		;
+	desc[7] = 0; // alpha blending enable
+	desc += 8;
+	size += 32;
+
+	/* Add a reload list descriptor 
+	*/
+	desc[0] = (uint32_t)desc_buffer;
+	desc[1] = (size+4+15)>>4;
+	desc[2] = 0;
+	desc[3] = 0
+		| (0xC << 27)
+		| (0x7 << 0)
+		;
+	desc += 4;
+	size += 16;
+
+	vps_write32(VPS_COMP_HDMI_VOUT1, layer_ctrl);
+
+	return size;
+}
+
+void vpdma_send_list(uint32_t* desc_buffer, int desc_len, int list_no)
+{
+	/* convert descriptor size from byte units to 128-bit units */
+	desc_len = (desc_len+15)>>4;
+
+	/* send list */
+	vpdma_write32(VPDMA_LIST_ADDR,(uint32_t)desc_buffer);
+	vpdma_write32(VPDMA_LIST_ATTR, 0
+			| (list_no<<24)  /* list number */
+			| (0<<16)        /* list type: normal */
+			| (desc_len<<0)  /* list size */
+			);
+}
+
+int dispmgr_wait_for_list_complete(int dispno)
+{
+	uint32_t status;
+	int repeat;
+	int ok;
+
+        for (ok = 0, repeat = 0; repeat < 100 && !ok; repeat++)
+	{
+		status = vpdma_read32(VPDMA_LIST_ATTR);
+		if ((status & 0x80000) == 0x80000)
+		{
+			ok = 1;
+		}
+		else
+		{
+			udelay(10);
+		}
+	}
+        if(repeat == 100)
+	{
+	    return -1;
+	}
+
+	return 0;
+}
+
+static int do_colorbar(cmd_tbl_t * cmdtp,int flag, int argc, char *argv[]) 
+{
+	/* set the prcm, pll and hdvenc settings for the reauired board */
+	SETBOARD();
+
+	return 0;
+}
+
+static int do_boot_logo(cmd_tbl_t * cmdtp,int flag, int argc, char *argv[]) 
+{
+	uint32_t* desc_buffer;
+	uint32_t* payload_buffer;
+	uint32_t size;
+	uint32_t image_source = 0;
+	uint32_t image_dest = 0;
+	uint32_t paddr;
+
+	/* VPDMA list number to use; please also check ISR */
+	int g_vpdma_list_no = VPDMA_LIST_NUMBER;
+
+#ifdef CONFIG_GRPX0
+	uint32_t grpx_unit = GRPX0;
+#elif defined CONFIG_GRPX1 
+	uint32_t grpx_unit = GRPX1;
+#else
+	uint32_t grpx_unit = GRPX2;
+#endif
+	/* check whether the arguments passed are correct  */
+	if (argc < 2)
+	{
+			cmd_usage(cmdtp);
+			return 1;
+	}		
+	else if (strcmp(argv[1], "on") == 0)
+	{
+		if (argc != 3)
+		{
+			cmd_usage(cmdtp);
+			return 1;
+		}
+		else
+		{
+			/* address in memory where bmp image is loaded */
+			image_source = simple_strtoul(argv[2], NULL, 16);
+		}
+	}
+	else if (strcmp(argv[1], "off") == 0)
+	{
+		vpdma_write32(VPDMA_LIST_ATTR, vpdma_read32(VPDMA_LIST_ATTR)
+                | (g_vpdma_list_no<<24)  /* list number */
+                | (1<<20)  /* stop bit for the list */
+                );
+		return 0;
+	}
+	else
+	{
+		cmd_usage(cmdtp);
+		return 1;
+	}
+	/* memory address for loading vpdma firmware and descriptors */
+	desc_buffer = (uint32_t*) VPDMA_DESC_BUFFER;
+
+	/* memory address for displaying the image formatted on the hdmi, the offset from the source location is 2 * WIDTH * HEIGHT */
+	image_dest = image_source + 3 * 3 * WIDTH * HEIGHT;
+
+	if(read_bmp_image(image_source, image_dest) == -1)
+	{
+		printf("ERROR: reading BMP image failed\n");
+		return -1;
+	}
+
+	/* set the prcm, pll and hdvenc settings for the reauired board */
+	SETBOARD();
+
+	if (vpdma_load_firmware(desc_buffer) == -1)
+	{
+#ifdef DEBUG_VPSS
+		printf("\nERROR vpdma_load_firmware failed");
+#endif
+		return -1;
+	}
+
+	paddr = image_dest;
+
+	/* allocate physical contiguous memory for payload data */
+	payload_buffer = (uint32_t*)((uint32_t) desc_buffer + 0x1000);
+
+	/* Allocate physical memory for MV data */
+	size = dispmgr_create_grpx_conf_descriptor(grpx_unit, desc_buffer, payload_buffer,WIDTH,HEIGHT);
+	vpdma_send_list(desc_buffer, size, g_vpdma_list_no);
+
+       	/* wait for list complete interrupt */
+	if(dispmgr_wait_for_list_complete(1) == -1)
+	{
+#ifdef DEBUG_VPSS
+		printf("\nERROR : wait for list complete FAILED!");
+#endif
+		return -1;
+	}
+
+#ifdef CONFIG_GRPX0
+	vpdma_write32(VPDMA_GRPX0_DATA_CSTAT,0x00001C00);
+#elif defined CONFIG_GRPX1
+	vpdma_write32(VPDMA_GRPX1_DATA_CSTAT,0x00001C00);
+#else
+	vpdma_write32(VPDMA_GRPX2_DATA_CSTAT,0x00001C00);
+#endif
+
+	size = dispmgr_setup_layers(desc_buffer, STRIDE, WIDTH, HEIGHT+60, paddr);
+	vpdma_send_list( desc_buffer, size, g_vpdma_list_no);
+
+	while (dispmgr_wait_for_list_complete(1) == -1);
+
+	return 0;
+}
+
+U_BOOT_CMD(colorbar, 3, 1, do_colorbar,"Displays a colorbar using HDVPSS","");
+U_BOOT_CMD(logo, 5, 0, do_boot_logo,"Displays a logo using HDVPSS",
+"on <address_bmp_image> \n"
+"logo off");
-- 
1.7.1

