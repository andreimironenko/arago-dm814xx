From c386f0e2819c0507ffc0aca6ae6cf3da499f0ea5 Mon Sep 17 00:00:00 2001
From: Guy Eilam <guy@wizery.com>
Date: Sun, 2 Oct 2011 08:38:06 +0200
Subject: [PATCH 9/9] driver_nl80211 - added the power save private driver commands for Android

Implemented support to POWERMODE and GETPOWER private commands
for Android.

Signed-off-by: Guy Eilam <guy@wizery.com>
---
 src/drivers/driver_nl80211.c |   57 ++++++++++++++++++++++++++++++-----------
 1 files changed, 41 insertions(+), 16 deletions(-)

diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 4dc45df..fc9dd84 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -6610,6 +6610,31 @@ static const char * nl80211_get_radio_name(void *priv)
 
 
 #ifdef ANDROID
+/* we start with "auto" power mode - power_save is on */
+static int g_power_mode = 0;
+
+static int nl80211_set_power_save(struct wpa_driver_nl80211_data *drv,
+			      enum nl80211_ps_state ps_state)
+{
+	struct nl_msg *msg;
+
+	msg = nlmsg_alloc();
+	if (!msg)
+		return -ENOMEM;
+
+	genlmsg_put(msg, 0, 0, genl_family_get_id(drv->nl80211), 0,
+		    0, NL80211_CMD_SET_POWER_SAVE, 0);
+
+	NLA_PUT_U32(msg, NL80211_ATTR_IFINDEX, drv->ifindex);
+	NLA_PUT_U32(msg, NL80211_ATTR_PS_STATE, ps_state);
+
+	return send_and_recv_msgs(drv, msg, NULL, NULL);
+ nla_put_failure:
+	nlmsg_free(msg);
+	return -ENOBUFS;
+}
+
+
 static int nl80211_toggle_rx_filter(char state)
 {
 	return 0; /* not implemented yet */
@@ -6674,15 +6699,29 @@ static int nl80211_priv_driver_cmd( void *priv, char *cmd, char *buf, size_t buf
 		ret = snprintf(buf, buf_len, "ScanMode = %u\n", g_scan_type);
 		if (ret < (int)buf_len)
 			return ret;
+	} else if( os_strncasecmp(cmd, "BTCOEXMODE", 10) == 0 ) {
+		int mode = atoi(cmd + 10);
+
+		wpa_printf(MSG_DEBUG, "will change btcoex mode to: %d", mode);
+
+		if (mode == 1) { /* disable BT-coex */
+			ret = wpa_driver_toggle_btcoex_state('0');
+		} else if (mode == 2) { /* enable BT-coex */
+			ret = wpa_driver_toggle_btcoex_state('1');
+		} else {
+			wpa_printf(MSG_DEBUG, "invalid btcoex mode: %d", mode);
+			ret = -1;
+		}
+#endif
 	} else if( os_strncasecmp(cmd, "POWERMODE", 9) == 0 ) {
 		int mode = atoi(cmd + 9);
 
 		if (mode == g_power_mode)
 			ret = 0;
 		else if (mode == 1) /* active mode */
-			ret = wpa_driver_set_power_save(drv->ifname, 0);
+			ret = nl80211_set_power_save(drv, NL80211_PS_DISABLED);
 		else if (mode == 0) /* auto mode */
-			ret = wpa_driver_set_power_save(drv->ifname, 1);
+			ret = nl80211_set_power_save(drv, NL80211_PS_ENABLED);
 
 		if (!ret)
 			g_power_mode = mode;
@@ -6691,20 +6730,6 @@ static int nl80211_priv_driver_cmd( void *priv, char *cmd, char *buf, size_t buf
 			   g_power_mode, mode, ret);
 	} else if( os_strcasecmp(cmd, "GETPOWER") == 0 ) {
 		ret = sprintf(buf, "powermode = %u\n", g_power_mode);
-	} else if( os_strncasecmp(cmd, "BTCOEXMODE", 10) == 0 ) {
-		int mode = atoi(cmd + 10);
-
-		wpa_printf(MSG_DEBUG, "will change btcoex mode to: %d", mode);
-
-		if (mode == 1) { /* disable BT-coex */
-			ret = wpa_driver_toggle_btcoex_state('0');
-		} else if (mode == 2) { /* enable BT-coex */
-			ret = wpa_driver_toggle_btcoex_state('1');
-		} else {
-			wpa_printf(MSG_DEBUG, "invalid btcoex mode: %d", mode);
-			ret = -1;
-		}
-#endif
 	} else if( os_strcasecmp(cmd, "RXFILTER-START") == 0 ) {
 		ret = nl80211_toggle_rx_filter('1');
 	} else if( os_strcasecmp(cmd, "RXFILTER-STOP") == 0 ) {
-- 
1.7.0.4

