From dd0cdb4dfde11ccb72c65c22d174b03cadf8d0f2 Mon Sep 17 00:00:00 2001
From: Brijesh Singh <bksingh@ti.com>
Date: Sun, 4 Jul 2010 17:39:23 -0500
Subject: [PATCH 2/8] add omapl138 support

---
 Makefile.external                 |   16 +++++++-
 src/Makefile.am                   |    2 +-
 src/gstticodecplugin_omapl138.cfg |   83 +++++++++++++++++++++++++++++++++++++
 src/gstticodecs_omapl138.c        |   83 +++++++++++++++++++++++++++++++++++++
 src/gsttividenc1.c                |    3 +
 5 files changed, 185 insertions(+), 2 deletions(-)
 create mode 100644 src/gstticodecplugin_omapl138.cfg
 create mode 100644 src/gstticodecs_omapl138.c

diff --git a/Makefile.external b/Makefile.external
index 1f67783..e55096b 100644
--- a/Makefile.external
+++ b/Makefile.external
@@ -23,7 +23,7 @@ $(error You need to define the environment variable DMAI_INSTALL_DIR)
 endif
 
 default:
-	@echo "Please specify the target: dm6446, omap3530, dm355, dm6467, dm6467t, dm365"
+	@echo "Please specify the target: dm6446, omap3530, dm355, dm6467, dm6467t, dm365 omapl138"
 
 export GST_TI_PLATFORM=$(MAKECMDGOALS)
 export BIOS_INSTALL_DIR
@@ -84,6 +84,17 @@ ifeq ($(GST_TI_PLATFORM), omap3530)
     export MVTOOL_DIR    = $(CSTOOL_DIR)
 endif
 
+ifeq ($(GST_TI_PLATFORM), omapl138)
+    export XDC_TARGET    = gnu.targets.arm.GCArmv5T
+    export XDC_PLATFORM  = ti.platforms.evmOMAPL138
+    export MVTOOL_PREFIX = $(CSTOOL_PREFIX)
+    export MVTOOL_DIR    = $(CSTOOL_DIR)
+    export PLATFORM_XDC  = ${XDC_PLATFORM}
+    export CROSS_COMPILE = ${CSTOOL_PREFIX}
+    export LINK_XDC_ROOT = $(LINK_INSTALL_DIR)
+    export C6ACCEL_INSTALL_DIR
+endif
+
 CPPFLAGS=-DPlatform_$(GST_TI_PLATFORM) 
 HOST=arm-none-linux-gnueabi
 
@@ -111,3 +122,6 @@ dm355: Makefile
 dm365: Makefile
 	$(MAKE) -f Makefile
 
+omapl138: Makefile
+	$(MAKE) -f Makefile
+
diff --git a/src/Makefile.am b/src/Makefile.am
index dee7c7d..177827f 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -18,7 +18,7 @@ noinst_HEADERS = gsttiauddec1.h gsttividdec2.h gsttiimgenc1.h gsttiimgdec1.h gst
 # XDC Configuration
 CONFIGURO     = $(XDC_INSTALL_DIR)/xs xdc.tools.configuro
 BUILT_SOURCES = $(XDC_CONFIG_BASENAME)/compiler.opt $(XDC_CONFIG_BASENAME)/linker.cmd
-XDC_PATH      = .;$(XDC_INSTALL_DIR)/packages;$(LINK_XDC_ROOT);$(FC_INSTALL_DIR)/packages;$(CE_INSTALL_DIR)/packages;$(XDAIS_INSTALL_DIR)/packages;$(CODEC_INSTALL_DIR)/packages;$(CMEM_INSTALL_DIR)/packages;$(DMAI_INSTALL_DIR)/packages;$(LPM_INSTALL_DIR)/packages;$(XDC_USER_PATH);$(EDMA3_LLD_INSTALL_DIR)/packages;
+XDC_PATH      = .;$(XDC_INSTALL_DIR)/packages;$(LINK_XDC_ROOT);$(FC_INSTALL_DIR)/packages;$(CE_INSTALL_DIR)/packages;$(XDAIS_INSTALL_DIR)/packages;$(CODEC_INSTALL_DIR)/packages;$(CMEM_INSTALL_DIR)/packages;$(DMAI_INSTALL_DIR)/packages;$(LPM_INSTALL_DIR)/packages;$(XDC_USER_PATH);$(EDMA3_LLD_INSTALL_DIR)/packages;$(C6ACCEL_INSTALL_DIR)/soc/c6accelw;$(C6ACCEL_INSTALL_DIR)/soc/packages
 
 gstticodecs_platform.c :
 	ln -s $(srcdir)/gstticodecs_$(GST_TI_PLATFORM).c gstticodecs_platform.c
diff --git a/src/gstticodecplugin_omapl138.cfg b/src/gstticodecplugin_omapl138.cfg
new file mode 100644
index 0000000..7f41250
--- /dev/null
+++ b/src/gstticodecplugin_omapl138.cfg
@@ -0,0 +1,83 @@
+/*
+ * Copyright (C) $year Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation version 2.1 of the License.
+ *
+ * This program is distributed #as is# WITHOUT ANY WARRANTY of any kind,
+ * whether express or implied; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ */
+
+/* Load the Codec Engine 'Operating System Abstraction Layer' */
+var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');
+
+var AACDEC    = xdc.useModule('ti.sdo.codecs.aachedec.ce.AACHEDEC')
+var H264DEC   = xdc.useModule('ti.sdo.codecs.h264dec.ce.H264DEC');
+var MPEG4DEC  = xdc.useModule('ti.sdo.codecs.mpeg4dec.ce.MPEG4DEC');
+var MPEG2DEC  = xdc.useModule('ti.sdo.codecs.mpeg2dec.ce.MPEG2DEC');
+var JPEGDEC   = xdc.useModule('ti.sdo.codecs.jpegdec.ce.JPEGDEC');
+var JPEGENC   = xdc.useModule('ti.sdo.codecs.jpegenc.ce.JPEGENC');
+var C6ACCEL   = xdc.useModule('ti.c6accel.ce.C6ACCEL');
+var H264ENC   = xdc.useModule('ti.sdo.codecs.h264enc.ce.H264ENC');
+var MPEG4ENC  = xdc.useModule('ti.sdo.codecs.mpeg4enc.ce.MPEG4ENC');
+
+var os = xdc.useModule('ti.sdo.ce.osal.linux.Settings');
+osalGlobal.os = os;
+
+/* Configure CE to use it's DSP Link Linux version */
+var ipc = xdc.useModule('ti.sdo.ce.ipc.Settings');
+ipc.commType = ipc.COMM_DSPLINK;
+
+/*
+*  ======== Engine Configuration ========
+ */
+var Engine = xdc.useModule('ti.sdo.ce.Engine');
+
+var demoEngine = Engine.create("codecServer", [
+	{name: "aachedec", mod:AACDEC, local:false},
+	{name: "h264dec", mod:H264DEC, local:false},
+	{name: "mpeg4dec", mod:MPEG4DEC, local:false},
+	{name: "mpeg2dec", mod:MPEG2DEC, local:false},
+	{name: "jpegdec", mod:JPEGDEC, local:false},
+	{name: "jpegenc", mod:JPEGENC, local:false},
+	{name: "c6accel", mod:C6ACCEL, local:false},
+	{name: "h264enc", mod:H264ENC, local:false},
+	{name: "mpeg4enc", mod:MPEG4ENC, local:false},
+]);
+
+/* Remote server image */
+var combopath = "" + java.lang.System.getenv("CODEC_SERVER");
+if (combopath != "" && combopath != "null") {
+	demoEngine.server = java.lang.System.getenv("CODEC_SERVER");
+}
+else {
+	demoEngine.server = "./cs.x64P";
+}
+
+var dsplinkDspLinkCfg = xdc.useModule('ti.sdo.ce.ipc.dsplink.DspLinkCfg');
+
+/* ======== Server memory map (DSPLINK) configuration ========
+ * This table must match exactly the addresses and sizes of segments in the 
+ * Server BIOS configuration (.tcf) script. There is exactly one "main", one 
+ * "link", and one "reset" segment type, and zero or more of "other" types.
+ */
+
+/* use the default memory map config for this server */
+demoEngine.armDspLinkConfig = dsplinkDspLinkCfg.DEFAULT_ARMDSPLINKCONFIG[Program.cpu.deviceName];
+demoEngine.armDspLinkConfig.memTable["DDR2"].addr = 0xC3C00000;
+demoEngine.armDspLinkConfig.memTable["DDR2"].size = 0x00300000;
+demoEngine.armDspLinkConfig.memTable["DDRALGHEAP"].addr = 0xC3200000;
+demoEngine.armDspLinkConfig.memTable["DDRALGHEAP"].size = 0x00A00000;
+demoEngine.armDspLinkConfig.memTable["DSPLINKMEM"].addr = 0xC3F01000;
+demoEngine.armDspLinkConfig.memTable["DSPLINKMEM"].size = 0x000FF000;
+demoEngine.armDspLinkConfig.memTable["RESETCTRL"].addr = 0xC3F00000;
+demoEngine.armDspLinkConfig.memTable["RESETCTRL"].size = 0x00000080;
+
+/* Load support for the DMAI module */
+var DMAI = xdc.loadPackage('ti.sdo.dmai');
+
+
diff --git a/src/gstticodecs_omapl138.c b/src/gstticodecs_omapl138.c
new file mode 100644
index 0000000..25a40d6
--- /dev/null
+++ b/src/gstticodecs_omapl138.c
@@ -0,0 +1,83 @@
+/*
+ * gstticodecs_omapl138.c
+ *
+ * This file provides information for available codecs on the OMAP3530 platform.
+ *
+ * Original Author:
+ *     Don Darling, Texas Instruments, Inc.
+ *
+ * Copyright (C) $year Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation version 2.1 of the License.
+ *
+ * This program is distributed #as is# WITHOUT ANY WARRANTY of any kind,
+ * whether express or implied; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ */
+
+#include "gstticodecs.h"
+
+/* Declaration of the production engine and decoders shipped with the DVSDK */
+static Char codecServer[] = "codecServer";
+
+/* NULL terminated list of speech decoders in the engine to use in the demo */
+GstTICodec gst_ticodec_codecs[] = {
+
+    /* Audio Codecs */
+    {
+        "AAC Audio Decoder",     /* String name of codec used by plugin      */
+        "aachedec",              /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    },
+
+    /* Video Codecs */
+    {
+        "H.264 Video Decoder",   /* String name of codec used by plugin      */
+        "h264dec",               /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    }, {
+        "MPEG4 Video Decoder",   /* String name of codec used by plugin      */
+        "mpeg4dec",              /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    }, {
+        "MPEG2 Video Decoder",   /* String name of codec used by plugin      */
+        "mpeg2dec",              /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    }, {
+        "H.264 Video Encoder",   /* String name of codec used by plugin      */
+        "h264enc",               /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    }, {
+        "MPEG4 Video Encoder",   /* String name of codec used by plugin      */
+        "mpeg4enc",               /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    },
+
+    /* Image Decoders */
+    {
+        "JPEG Image Decoder",    /* String name of codec used by plugin      */
+        "jpegdec",               /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    }, {
+        "JPEG Image Encoder",    /* String name of codec used by plugin      */
+        "jpegenc",               /* String name of codec used by CE          */
+        codecServer              /* Engine that contains this codec          */
+    },
+
+    { NULL }
+};
+
+
+/******************************************************************************
+ * Custom ViM Settings for editing this file
+ ******************************************************************************/
+#if 0
+ Tabs (use 4 spaces for indentation)
+ vim:set tabstop=4:      /* Use 4 spaces for tabs          */
+ vim:set shiftwidth=4:   /* Use 4 spaces for >> operations */
+ vim:set expandtab:      /* Expand tabs into white spaces  */
+#endif
diff --git a/src/gsttividenc1.c b/src/gsttividenc1.c
index 70d2b71..db98e10 100644
--- a/src/gsttividenc1.c
+++ b/src/gsttividenc1.c
@@ -1493,6 +1493,9 @@ static gboolean gst_tividenc1_codec_start (GstTIVidenc1 *videnc1)
         #if defined(Platform_omap3530)
         case Cpu_Device_OMAP3530:
         #endif
+        #if defined(Platform_omapl138)
+        case Cpu_Device_OMAPL138:
+        #endif
         case Cpu_Device_DM6446:
             params.inputChromaFormat = XDM_YUV_422ILE;
             break;
-- 
1.7.0.4

