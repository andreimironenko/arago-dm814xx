include Rules.make

DEFAULT_LINUXKERNEL_CONFIG=davinci_dm365_defconfig

.PHONY:	all clean everything clobber help cmem cmem_clean cmem_install dmai dmai_clean dmai_install dm365mm dm365mm_clean dm365mm_install linux linux_clean linux_install psp_examples psp_example_clean psp_example_install install

#==============================================================================
# The default build target.
#==============================================================================
all:	cmem dm365mm

#==============================================================================
# Clean up the targets built by 'make all'.
#==============================================================================
clean:	cmem_clean dm365mm_clean

#==============================================================================
# Build everything rebuildable.
#==============================================================================
everything: linux psp_examples cmem dm365mm ceexamples dmai

#==============================================================================
# Install everything
#==============================================================================
install: linux_install cmem_install dm365mm_install dmai_install psp_examples_install ceexamples_install

#==============================================================================
# Clean up all targets.
#==============================================================================
clobber:    linux_clean psp_examples_clean dmai_clean ceexamples_clean cmem_clean dm365mm_clean

#==============================================================================
# A help message target.
#==============================================================================
help:
	@echo
	@echo "Available build targets are:"
	@echo
	@echo "    all                          : Build the components below"
	@echo "    clean                        : Remove files generated by the 'all' target"
	@echo
	@echo "    cmem                         : Build the CMEM kernel module"
	@echo "    cmem_clean                   : Remove generated cmem files."
	@echo "    cmem_install                 : Install cmemk module"
	@echo
	@echo "    dm365mm                      : Build the dm365mm kernel module"
	@echo "    dm365mm_clean                : Remove generated dm365mm files"
	@echo "    dm365mm_install              : Install dm365mm module"
	@echo
	@echo "The following targets have to be explicitly built and cleaned:"
	@echo
	@echo "    everything                   : Rebuild everything including below targets"
	@echo "    clobber                      : Remove all generated files"
	@echo
	@echo "    dmai                         : Build DMAI"
	@echo "    dmai_clean                   : Remove generated DMAI files."
	@echo "    dmai_install                 : Install dmai app"
	@echo
	@echo "    ceexamples                   : Build CE codecs, extensions, servers and apps"
	@echo "    ceexamples_clean             : Remove generated CE example files."
	@echo
	@echo "    ceexample_app                : Build CE examples app"
	@echo "    ceexample_app_clean          : Remove generated CE example app files."
	@echo "    ceexample_app_install        : Install CE example apps"

	@echo
	@echo "    ceexample_codecs             : Build CE examples codecs"
	@echo "    ceexample_codecs_clean       : Remove generated CE example codecs files."
	@echo "    ceexample_codecs_install     : Install CE example codecs"
	@echo
	@echo "    ceexample_extensions         : Build CE examples extensions"
	@echo "    ceexample_extensions_clean   : Remove generated CE example extensions files."
	@echo "    ceexample_extensions_install : Install CE example extensions"
	@echo
	@echo "    ceexample_servers            : Build CE examples servers"
	@echo "    ceexample_extensions_clean   : Remove generated CE example servers files."
	@echo "    ceexample_extensions_install : Install CE example servers"
	@echo
	@echo "    linux                        : Build Linux kernel uImage and module"
	@echo "    linux_clean                  : Remove generated Linux kernel files"
	@echo "    linux_install                : Install kernel binary and  modules"
	@echo
	@echo "    psp_examples                 : Build Linux examples"
	@echo "    psp_examples_clean           : Remove all generated PSP examples"
	@echo "    psp_examples_install         : Install psp examples"
	@echo
	@echo "    install                      : Install all the targets in "
	@echo "				   $(EXEC_DIR)"
	@echo

#==============================================================================
# Build the Linux kernel. Also, an explicit cleanup target is defined.
#==============================================================================
linux:
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) CROSS_COMPILE=$(CSTOOL_PREFIX) $(DEFAULT_LINUXKERNEL_CONFIG)
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) CROSS_COMPILE=$(CSTOOL_PREFIX) uImage
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) CROSS_COMPILE=$(CSTOOL_PREFIX) modules
linux_clean:
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) CROSS_COMPILE=$(CSTOOL_PREFIX) clean

linux_install:
	install -d $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/arch/arm/boot/uImage $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/vmlinux $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/System.map $(EXEC_DIR)/boot
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) CROSS_COMPILE=$(CSTOOL_PREFIX) INSTALL_MOD_PATH=$(EXEC_DIR)/ modules_install

#==============================================================================
# Build the PSP Linux examples. Also, an explicit cleanup target is defined.
#==============================================================================
psp_examples:
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples/media_ti KERNEL_PATH=$(LINUXKERNEL_INSTALL_DIR)/include CROSS_COMPILE=$(CSTOOL_PREFIX) all

psp_examples_clean:
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples/media_ti KERNEL_PATH=$(LINUXKERNEL_INSTALL_DIR)/include CROSS_COMPILE=$(CSTOOL_PREFIX) clean

psp_examples_install:
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples/media_ti KERNEL_PATH=$(LINUXKERNEL_INSTALL_DIR)/include CROSS_COMPILE=$(CSTOOL_PREFIX) EXEC_DIR=$(EXEC_DIR)/psp-examples install
	
#==============================================================================
# Build the CMEM kernel module for the configured platform, and make sure the
# kernel_binaries directory is kept in sync. Also, an explicit cleanup target
# is defined.
#==============================================================================
cmem:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface ../../lib/cmem.a470MV
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module

cmem_clean:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module clean
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface clean

cmem_install:
	install -d $(EXEC_DIR)/cmem
	install $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module/cmemk.ko $(EXEC_DIR)/cmem

#==============================================================================
# Build the dm355mm kernel module (if the configured platform is dm355). Also,
# an explicit cleanup target is defined.
#==============================================================================
dm365mm:
	$(MAKE) -C $(DM365MM_MODULE_INSTALL_DIR)/module LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR)  MVTOOL_PREFIX=$(CSTOOL_PREFIX)
	$(MAKE) -C $(DM365MM_MODULE_INSTALL_DIR)/interface LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR)  MVTOOL_PREFIX=$(CSTOOL_PREFIX)

dm365mm_clean:
	$(MAKE) -C $(DM365MM_MODULE_INSTALL_DIR)/module LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR)  MVTOOL_PREFIX=$(CSTOOL_PREFIX) clean
	$(MAKE) -C $(DM365MM_MODULE_INSTALL_DIR)/interface LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR)  MVTOOL_PREFIX=$(CSTOOL_PREFIX) clean

dm365mm_install:
	install -d $(EXEC_DIR)/dm365mm
	install $(DM365MM_MODULE_INSTALL_DIR)/module/dm365mmap.ko  $(EXEC_DIR)/dm365mm

#==============================================================================
# Build the Davinci Multimedia Application Interface for the configured
# platform. Also, an explicit cleanup target is defined.
#==============================================================================
dmai:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(PLATFORM)_al \
	CE_INSTALL_DIR_$(PLATFORM)_al=$(CE_INSTALL_DIR) \
	CODEC_INSTALL_DIR_$(PLATFORM)_al=$(CODEC_INSTALL_DIR) \
	CMEM_INSTALL_DIR_$(PLATFORM)_al=$(CMEM_INSTALL_DIR) \
	FC_INSTALL_DIR_$(PLATFORM)_al=$(FC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR_$(PLATFORM)_al=$(XDAIS_INSTALL_DIR) \
	LINUXLIBS_INSTALL_DIR_$(PLATFORM)_al=$(LINUXLIBS_INSTALL_DIR) \
	LINUXKERNEL_INSTALL_DIR_$(PLATFORM)_al=$(LINUXKERNEL_INSTALL_DIR) \
	CROSS_COMPILE_$(PLATFORM)_al=$(CSTOOL_PREFIX) \
	XDC_INSTALL_DIR_$(PLATFORM)_al=$(XDC_INSTALL_DIR) \
	VERBOSE=true \
	all
	
dmai_clean:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(PLATFORM)_al \
	XDC_INSTALL_DIR_$(PLATFORM)_al=$(XDC_INSTALL_DIR) \
	clean

dmai_install:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(PLATFORM)_al \
	EXEC_DIR_$(PLATFORM)_al=$(EXEC_DIR)/dmai \
	install

###############################################################################
# Build codec engine examples
###############################################################################
ceexamples_apps:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_apps_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_apps_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps to target filesystem. "
	@echo 

ceexamples_extensions:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/extensions \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_extensions_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_extensions_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/extensions to target filesystem. "
	@echo 


ceexamples_servers:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_servers_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_servers_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers to target filesystem. "
	@echo 


ceexamples_codecs:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_codecs_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs \
	DEVICES="DM365" \
	GPPOS=LINUX_GCC \
	PROGRAMS=APP_LOCAL \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_codecs_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs to target filesystem. "
	@echo 

ceexamples: ceexamples_codecs ceexamples_extensions ceexamples_servers ceexamples_apps
 
ceexamples_clean: ceexamples_codecs_clean ceexamples_extensions_clean ceexamples_servers_clean ceexamples_apps_clean

ceexamples_install: ceexamples_codecs_install ceexamples_extensions_install ceexamples_servers_install ceexamples_apps_install



